/* Generated by the Nim Compiler v1.0.6 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI220588 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI108432 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI111247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3630 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3654 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3660 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI231211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI231207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI231209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI21156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI209448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI209283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI209281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI209227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI209565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI209563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI209561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI209231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI209229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI214083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI214084 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI219761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI219757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI219152 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI219713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI219701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI219722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI219705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI219720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI219028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI219714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI219028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI219028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI219028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI219028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI219028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI219028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI219028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI219028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI219028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI219028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI219028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI219028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI219028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI219028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI219028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI219028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI219028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI219028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI219028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI219028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI219028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI219028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI219028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI219028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI219028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI219028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI219028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI219028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI219028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI219028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI219028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI219028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI219028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI219028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI219028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI219028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI219028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI219028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI219028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI219028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI219028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI219028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI219028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI219028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI219028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI219028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI219028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI219028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI219028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI219028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI219028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI219028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI219028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI219028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI219028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI219028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI219028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI219028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI219028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI219028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI219028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI219028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI219028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI219028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI219028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI219028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI219028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI219028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI219028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI219028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI219028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI219028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI219028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI219028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI219028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI219028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI219028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI219028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI219028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI219028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI219028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI219028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI219028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI219028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI219028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI219028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI219028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI219028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI219028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI219028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI219028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI219028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI219028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI219028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI219028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI219028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI219028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI219028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI219028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI219028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI219028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI219028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI219028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI219028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI219028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI219028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI219028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI219028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI219028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI219028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI219028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI219028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI219028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI219028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI219028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI219028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI219028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI219028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI219028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI219028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI219028, name: "menu", len: 0, sons: null}}};
NTI219028.node = NNI219028;
NTI219705.base = NTI219714;
NTI219720.base = NTI219705;
NTI219722.base = NTI140;
var NNI219152 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI219152, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI219152, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI219152, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI219152, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI219152, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI219152, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI219152, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI219152, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI219152, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI219152, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI219152, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI219152, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI219152, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI219152, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI219152, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI219152, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI219152, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI219152, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI219152, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI219152, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI219152, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI219152, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI219152, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI219152, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI219152, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI219152, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI219152, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI219152, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI219152, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI219152, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI219152, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI219152, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI219152, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI219152, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI219152, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI219152, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI219152, name: "onwheel", len: 0, sons: null}}};
NTI219152.node = NNI219152;
var NNI219713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI219152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI219757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI219761, name: "Field2", sons: null}]};
NTI219713.node = NNI219713;
NTI219701.base = NTI219713;
var NNI214083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI214083.node = NNI214083;
NTI214084.base = NTI214083;
NTI209561.base = NTI209229;
NTI209563.base = NTI209229;
NTI209565.base = NTI209229;
var NNI209227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI209227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI209227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI209227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI209227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI209227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI209227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI209227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI209227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI209227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI209227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI209227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI209227, name: "NotationNode", len: 0, sons: null}}};
NTI209227.node = NNI209227;
var NNI209283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI140, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI209283.node = NNI209283;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI209283.base = NTI3608;
NTI209281.base = NTI209283;
var NNI209231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI209561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI209563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI209565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI209229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI209229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI209229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI209227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI209229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI209229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI209281, name: "style", sons: null}]};
NTI209231.node = NNI209231;
var NNI209205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI209372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI209376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI209380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI209384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI209388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI209392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI209396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI209400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI209404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI209408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI209412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI209416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI209420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI209424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI209428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI209432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI209436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI209440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI209444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI209448, name: "onunload", sons: null}]};
NTI209205.node = NNI209205;
NTI209205.base = NTI3608;
NTI209231.base = NTI209205;
NTI209229.base = NTI209231;
var NNI219714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI219028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI219720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI219722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI219701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI214084, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI209229, name: "dom", sons: null}]};
NTI219714.node = NNI219714;
NTI219714.base = NTI3608;
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3658.base = NTI3628;
var NNI21156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI21156.node = NNI21156;
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
NTI3642.base = NTI3628;
NTI3646.base = NTI3642;
var NNI3650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3650.node = NNI3650;
NTI3650.base = NTI3628;
var NNI231207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI231207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI231207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI231207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI231207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI231207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI231207, name: "pkSame", len: 0, sons: null}}};
NTI231207.node = NNI231207;
var NNI231209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI231207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI209229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI209229, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI219705, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI219705, name: "oldNode", sons: null}]};
NTI231209.node = NNI231209;
var NNI231211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI219705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI219705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI231211.node = NNI231211;
var NNI3660 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3660.node = NNI3660;
NTI3660.base = NTI3628;
var NNI3662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3662.node = NNI3662;
NTI3662.base = NTI3628;
var NNI3644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3644.node = NNI3644;
NTI3644.base = NTI3642;
var NNI3654 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3654.node = NNI3654;
var NNI3652 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3652.node = NNI3652;
var NNI3630 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3630.node = NNI3630;
NTI3630.base = NTI3626;
NTI3652.base = NTI3630;
NTI3654.base = NTI3652;
var NNI111247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI108432, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI111247.node = NNI111247;
NTI220588.base = NTI140;

function makeNimstrLit(c_23270) {
		  var ln = c_23270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23270.charCodeAt(i);
  }
  return result;
  

	
}

function cstrToNimstr(c_23287) {
		  var ln = c_23287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function arrayConstr(len_25086, value_25087, typ_25088) {
		    var result = new Array(len_25086);
    for (var i = 0; i < len_25086; ++i) result[i] = nimCopy(null, value_25087, typ_25088);
    return result;
  

	
}

function toJSStr(s_23304) {
										var Tmp5;
						var Tmp7;

	var result_23305 = null;

		var res_23363 = new_seq_23336((s_23304 != null ? s_23304.length : 0));
		var i_23365 = 0;
		var j_23367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23365 < (s_23304 != null ? s_23304.length : 0))) break L2;
					var c_23368 = s_23304[i_23365];
					if ((c_23368 < 128)) {
					res_23363[j_23367] = String.fromCharCode(c_23368);
					i_23365 += 1;
					}
					else {
						var helper_23391 = new_seq_23336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23392 = c_23368.toString(16);
									if (((code_23392 != null ? code_23392.length : 0) == 1)) {
									if (helper_23391 != null) { helper_23391.push("%0"); } else { helper_23391 = ["%0"]; };
									}
									else {
									if (helper_23391 != null) { helper_23391.push("%"); } else { helper_23391 = ["%"]; };
									}
									
									if (helper_23391 != null) { helper_23391.push(code_23392); } else { helper_23391 = [code_23392]; };
									i_23365 += 1;
										if (((s_23304 != null ? s_23304.length : 0) <= i_23365)) Tmp5 = true; else {											Tmp5 = (s_23304[i_23365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23368 = s_23304[i_23365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23363[j_23367] = decodeURIComponent(helper_23391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23363[j_23367] = helper_23391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23367 += 1;
				}
		} while(false);
		if (res_23363 === null) res_23363 = [];
               if (res_23363.length < j_23367) { for (var i=res_23363.length;i<j_23367;++i) res_23363.push(null); }
               else { res_23363.length = j_23367; };
		result_23305 = res_23363.join("");

	return result_23305;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		e_21618.trace = nimCopy(null, raw_write_stack_trace_21468(), NTI138);
		throw e_21618;

	
}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_219689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_219695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimMin(a_24203, b_24204) {
		var Tmp1;

	var result_24205 = 0;

	BeforeRet: do {
		if ((a_24203 <= b_24204)) {
		Tmp1 = a_24203;
		}
		else {
		Tmp1 = b_24204;
		}
		
		result_24205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24205;

}
var ConstSet2 = setConstr(6);

function raiseFieldError(f_23055) {
		var eHEX60gensym23058_23203 = null;
		eHEX60gensym23058_23203 = {m_type: NTI3660, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym23058_23203.message = nimCopy(null, f_23055, NTI138);
		eHEX60gensym23058_23203.parent = null;
		raiseException(eHEX60gensym23058_23203, "FieldError");

	
}

function chckRange(i_25124, a_25125, b_25126) {
			var Tmp1;

	var result_25127 = 0;

	BeforeRet: do {
			if (!(a_25125 <= i_25124)) Tmp1 = false; else {				Tmp1 = (i_25124 <= b_25126);			}		if (Tmp1) {
		result_25127 = i_25124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_25127;

}

function divInt(a_23857, b_23858) {
		    if (b_23858 == 0) raiseDivByZero();
    if (b_23858 == -1 && a_23857 == 2147483647) raiseOverflow();
    return Math.trunc(a_23857 / b_23858);
  

	
}

function mulInt(a_23839, b_23840) {
		    var result = a_23839 * b_23840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function modInt(a_23875, b_23876) {
		    if (b_23876 == 0) raiseDivByZero();
    if (b_23876 == -1 && a_23875 == 2147483647) raiseOverflow();
    return Math.trunc(a_23875 % b_23876);
  

	
}

function eqStrings(a_23641, b_23642) {
		    if (a_23641 == b_23642) return true;
    if (a_23641 === null && b_23642.length == 0) return true;
    if (b_23642 === null && a_23641.length == 0) return true;
    if ((!a_23641) || (!b_23642)) return false;
    var alen = a_23641.length;
    if (alen != b_23642.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_23641[i] != b_23642[i]) return false;
    return true;
  

	
}
var ConstSet3 = setConstr(5);
var ConstSet4 = setConstr(5);
var ConstSet5 = setConstr(6);
var ConstSet6 = setConstr(4);
var ConstSet7 = setConstr(5);
var ConstSet8 = setConstr(3);
var ConstSet9 = setConstr(2);

function mnewString(len_23463) {
		    return new Array(len_23463);
  

	
}
var ConstSet10 = setConstr(60, 62, 94);
var ConstSet11 = setConstr(60, 62, 94);
var ConstSet12 = setConstr(45, 43, 32);
var ConstSet13 = setConstr([48, 57]);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([65, 90], [97, 122]);

function nimCharToStr(x_21062) {
	var result_21063 = null;

		result_21063 = nimCopy(null, mnewString(1), NTI138);
		result_21063[0] = x_21062;

	return result_21063;

}

function addChar(x_25311, c_25312) {
		x_25311.push(c_25312);

	
}
var ConstSet17 = setConstr(46, 44);
var ConstSet18 = setConstr([65, 90]);
var ConstSet19 = setConstr([97, 122]);
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var lc_51207 = [{}];
var object_id_52237 = [0];
var gid_220495 = [0];
var vcomponents_224239 = [{}];
var kxi_231324 = [null];

function new_vnode_222028(kind_222030) {
	var result_222031 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 270;
		result_222031 = {kind: kind_222030, index: -1, m_type: NTI219714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_222031;

}

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_21151(f_21153) {
					var Tmp3;

	var result_21154 = [null];

		var it_21162 = f_21153;
		var i_21164 = 0;
		var total_21166 = 0;
		var temp_frames_21173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI21156);
		L1: do {
				L2: while (true) {
					if (!!((it_21162 == null))) Tmp3 = false; else {						Tmp3 = (i_21164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_21173[i_21164].Field0 = it_21162.procname;
					temp_frames_21173[i_21164].Field1 = it_21162.line;
					i_21164 += 1;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_21162 == null))) break L5;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		result_21154[0] = nimCopy(null, [], NTI138);
		if (!((total_21166 == i_21164))) {
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("(")); } else { result_21154[0] = makeNimstrLit("("); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr(((total_21166 - i_21164))+"")); } else { result_21154[0] = cstrToNimstr(((total_21166 - i_21164))+"").slice(); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_21154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_21421 = 0;
			var colontmp__257105 = 0;
			colontmp__257105 = (i_21164 - 1);
			var res_257110 = colontmp__257105;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_257110)) break L8;
						j_21421 = res_257110;
						add_18638(result_21154, 0, temp_frames_21173[j_21421].Field0);
						if ((0 < temp_frames_21173[j_21421].Field1)) {
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(", line: ")); } else { result_21154[0] = makeNimstrLit(", line: "); };
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr((temp_frames_21173[j_21421].Field1)+"")); } else { result_21154[0] = cstrToNimstr((temp_frames_21173[j_21421].Field1)+"").slice(); };
						}
						
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("\x0A")); } else { result_21154[0] = makeNimstrLit("\x0A"); };
						res_257110 -= 1;
					}
			} while(false);
		} while(false);

	return result_21154[0];

}

function raw_write_stack_trace_21468() {
	var result_21470 = null;

		if (!((framePtr == null))) {
		result_21470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_21151(framePtr) || []), NTI138);
		}
		else {
			result_21470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_21470;

}

function new_seq_23336(len_23339) {
	var result_23341 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_23341 = new Array(len_23339); for (var i=0;i<len_23339;++i) {result_23341[i]=null;}	framePtr = F.prev;

	return result_23341;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(raw_write_stack_trace_21468()); } else { buf_21530[0] = raw_write_stack_trace_21468().slice(); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function raiseIndexError(i_22655, a_22656, b_22657) {
		var Tmp1;

		var eHEX60gensym22802_23003 = null;
		eHEX60gensym22802_23003 = {m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22657 < a_22656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22657)+"") || []);
		}
		
		eHEX60gensym22802_23003.message = nimCopy(null, Tmp1, NTI138);
		eHEX60gensym22802_23003.parent = null;
		raiseException(eHEX60gensym22802_23003, "IndexError");

	
}

function add_220786(parent_220788, kid_220789) {
	var F={procname:"vdom.add",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 264;
		if (parent_220788.kids != null) { parent_220788.kids.push(kid_220789); } else { parent_220788.kids = [kid_220789]; };
	framePtr = F.prev;

	
}

function raiseOverflow() {
		var eHEX60gensym22058_22203 = null;
		eHEX60gensym22058_22203 = {m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22058_22203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		eHEX60gensym22058_22203.parent = null;
		raiseException(eHEX60gensym22058_22203, "OverflowError");

	
}

function tree_222046(kind_222048, kids_222050) {
	var result_222051 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 273;
		result_222051 = new_vnode_222028(kind_222048);
		L1: do {
			F.line = 274;
			var k_222082 = null;
			F.line = 3;
			var i_257091 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_257091 < (kids_222050 != null ? kids_222050.length : 0))) break L3;
						F.line = 274;
						k_222082 = kids_222050[chckIndx(i_257091, 0, (kids_222050 != null ? kids_222050.length : 0)+0-1)-0];
						F.line = 274;
						add_220786(result_222051, k_222082);
						F.line = 6;
						i_257091 = addInt(i_257091, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_222051;

}
var earth_age_257001 = [0.0];
var desired_age_257002 = [0.0];
var tmp_257044 = tree_222046(43, []);
tmp_257044.class = "loading";
var res_257054 = [tmp_257044];
var planets_257059 = [null];

function sys_fatal_15062(message_15066) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_15203 = null;
		F.line = 37;
		e_15203 = {m_type: NTI3650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_15203.message = nimCopy(null, message_15066, NTI138);
		F.line = 39;
		raiseException(e_15203, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_15058(msg_15060) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_15062(msg_15060);
	framePtr = F.prev;

	
}

function failed_assert_impl_15266(msg_15268) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_15058(msg_15268);
	framePtr = F.prev;

	
}

function valueHEX3D_219839(n_219841, v_219842) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 167;
		n_219841.text = v_219842;
	framePtr = F.prev;

	
}

function value_219822(n_219824) {
	var result_219825 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 166;
		result_219825 = n_219824.text;
	framePtr = F.prev;

	return result_219825;

}

function add_event_shell_231415(d_231417, name_231418, h_231419) {
	var F={procname:"karax.addEventShell",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 89;
		d_231417.addEventListener(name_231418, h_231419, false);
		if ((d_231417.karaxEvents == null)) {
		F.line = 91;
		d_231417.karaxEvents = new Array(0);
		}
		
		F.line = 92;
		d_231417.karaxEvents.push({Field0: name_231418, Field1: h_231419});
	framePtr = F.prev;

	
}

function wrap_event_231560(d_231562, n_231563, k_231564, action_231565) {

			function later_wrapper_232027() {

					function HEX3Aanonymous_232033(ev_232035) {

							function wrapper_232036() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var vHEX60gensym232038_232039 = ev_232035.target.value;
									F.line = 73;
									valueHEX3D_219839(n_232031, vHEX60gensym232038_232039);
									if (!(!((action_232030 == null)))) {
									F.line = 74;
									failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(74, 10) `action != nil` "));
									}
									
									F.line = 75;
									action_232030(ev_232035, n_232031);
									if (!((value_219822(n_232031) == vHEX60gensym232038_232039))) {
									F.line = 77;
									ev_232035.target.value = value_219822(n_232031);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if (!((timer_232032 == null))) {
							F.line = 121;
							clearTimeout(timer_232032);
							}
							
							F.line = 122;
							timer_232032 = setTimeout(wrapper_232036, 400);
						framePtr = F.prev;

						
					}

				var result_232029 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 116;
					var action_232030 = action_231565;
					F.line = 117;
					var n_232031 = n_231563;
					F.line = 118;
					var timer_232032 = null;
					F.line = 119;
					result_232029 = HEX3Aanonymous_232033;
				framePtr = F.prev;

				return result_232029;

			}

			function enter_wrapper_231857() {

					function HEX3Aanonymous_231862(ev_231864) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if ((ev_231864.keyCode == 13)) {
							F.line = 72;
							var vHEX60gensym231865_231866 = ev_231864.target.value;
							F.line = 73;
							valueHEX3D_219839(n_231861, vHEX60gensym231865_231866);
							if (!(!((action_231860 == null)))) {
							F.line = 74;
							failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_231860(ev_231864, n_231861);
							if (!((value_219822(n_231861) == vHEX60gensym231865_231866))) {
							F.line = 77;
							ev_231864.target.value = value_219822(n_231861);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_231859 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 110;
					var action_231860 = action_231565;
					F.line = 111;
					var n_231861 = n_231563;
					F.line = 112;
					result_231859 = HEX3Aanonymous_231862;
				framePtr = F.prev;

				return result_231859;

			}

			function std_wrapper_231567() {

					function HEX3Aanonymous_231572(ev_231574) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
								if ((n_231571.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_231571.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_231571.kind == 107);								}							if (Tmp1) {
							F.line = 72;
							var vHEX60gensym231593_231594 = ev_231574.target.value;
							F.line = 73;
							valueHEX3D_219839(n_231571, vHEX60gensym231593_231594);
							if (!(!((action_231570 == null)))) {
							F.line = 74;
							failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_231570(ev_231574, n_231571);
							if (!((value_219822(n_231571) == vHEX60gensym231593_231594))) {
							F.line = 77;
							ev_231574.target.value = value_219822(n_231571);
							}
							
							}
							else {
								F.line = 107;
							action_231570(ev_231574, n_231571);
							}
							
						framePtr = F.prev;

						
					}

				var result_231569 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 102;
					var action_231570 = action_231565;
					F.line = 103;
					var n_231571 = n_231563;
					F.line = 104;
					result_231569 = HEX3Aanonymous_231572;
				framePtr = F.prev;

				return result_231569;

			}

	var result_231566 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 124;
		switch (k_231564) {
		case 30:
			F.line = 126;
			result_231566 = later_wrapper_232027();
			F.line = 127;
			add_event_shell_231415(d_231562, "keyup", result_231566);
			break;
		case 29:
			F.line = 129;
			result_231566 = enter_wrapper_231857();
			F.line = 130;
			add_event_shell_231415(d_231562, "keyup", result_231566);
			break;
		default: 
			F.line = 132;
			result_231566 = std_wrapper_231567();
			F.line = 133;
			add_event_shell_231415(d_231562, to_event_name_219695[chckIndx(k_231564, 0, (to_event_name_219695 != null ? to_event_name_219695.length : 0)+0-1)-0], result_231566);
			break;
		}
	framePtr = F.prev;

	return result_231566;

}

function apply_events_232286(n_232288) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 145;
		var dest_232289 = n_232288.dom;
		L1: do {
			F.line = 146;
			var i_232302 = 0;
			F.line = 2737;
			var colontmp__257554 = 0;
			F.line = 146;
			colontmp__257554 = (n_232288.events != null ? n_232288.events.length : 0);
			F.line = 2739;
			var i_257555 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257555 < colontmp__257554)) break L3;
						F.line = 146;
						i_232302 = i_257555;
						F.line = 147;
						n_232288.events[chckIndx(i_232302, 0, (n_232288.events != null ? n_232288.events.length : 0)+0-1)-0]["Field2"] = wrap_event_231560(dest_232289, n_232288, n_232288.events[chckIndx(i_232302, 0, (n_232288.events != null ? n_232288.events.length : 0)+0-1)-0]["Field0"], n_232288.events[chckIndx(i_232302, 0, (n_232288.events != null ? n_232288.events.length : 0)+0-1)-0]["Field1"]);
						F.line = 2742;
						i_257555 = addInt(i_257555, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_217228(n_217230, s_217231) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		F.line = 324;
		n_217230.style = {};
		L1: do {
			F.line = 325;
			var i_217264 = 0;
			F.line = 2672;
			var colontmp__257566 = 0;
			F.line = 325;
			colontmp__257566 = subInt(s_217231.length, 1);
			F.line = 2689;
			var res_257567 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_257567 <= colontmp__257566)) break L3;
						F.line = 325;
						i_217264 = res_257567;
						F.line = 326;
						n_217230.style[s_217231[i_217264]] = s_217231[addInt(i_217264, 1)];
						F.line = 2692;
						res_257567 = addInt(res_257567, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function to_dom_232367(n_232369, use_attached_node_232370, kxi_232371) {
			var Tmp9;
			var Tmp10;

	var result_232372 = null;

	var F={procname:"karax.toDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (use_attached_node_232370) {
		if (!((n_232369.dom == null))) {
		if (!((n_232369.id == null))) {
		F.line = 158;
		kxi_232371.byId[n_232369.id] = n_232369;
		}
		
		F.line = 159;
		result_232372 = n_232369.dom;
		break BeforeRet;
		}
		
		}
		
		if ((n_232369.kind == 0)) {
		F.line = 161;
		result_232372 = document.createTextNode(n_232369.text);
		F.line = 141;
		n_232369.dom = result_232372;
		if (!((n_232369.id == null))) {
		F.line = 142;
		kxi_231324[0].byId[n_232369.id] = n_232369;
		}
		
		}
		else {
		if ((n_232369.kind == 6)) {
		F.line = 164;
		result_232372 = document.createElement("div");
		F.line = 165;
		result_232372.innerHTML = n_232369.text;
		F.line = 141;
		n_232369.dom = result_232372;
		if (!((n_232369.id == null))) {
		F.line = 142;
		kxi_231324[0].byId[n_232369.id] = n_232369;
		}
		
		F.line = 167;
		break BeforeRet;
		}
		else {
		if ((n_232369.kind == 3)) {
		F.line = 169;
		var x_232458 = vcomponents_224239[0][n_232369.text](n_232369.kids);
		F.line = 170;
		result_232372 = to_dom_232367(x_232458, use_attached_node_232370, kxi_232371);
		F.line = 141;
		n_232369.dom = result_232372;
		if (!((n_232369.id == null))) {
		F.line = 142;
		kxi_231324[0].byId[n_232369.id] = n_232369;
		}
		
		F.line = 173;
		break BeforeRet;
		}
		else {
		if ((n_232369.kind == 4)) {
		F.line = 175;
		result_232372 = n_232369.dom;
		if (!(!((result_232372 == null)))) {
		F.line = 176;
		failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(176, 12) `result != nil` "));
		}
		
		F.line = 141;
		n_232369.dom = result_232372;
		if (!((n_232369.id == null))) {
		F.line = 142;
		kxi_231324[0].byId[n_232369.id] = n_232369;
		}
		
		F.line = 179;
		break BeforeRet;
		}
		else {
		if ((n_232369.kind == 5)) {
		F.line = 181;
		var x_232622 = n_232369;
		if (!((x_232622.onAttachImpl == null))) {
		F.line = 182;
		x_232622.onAttachImpl(x_232622);
		}
		
		if (!(!((x_232622.renderImpl == null)))) {
		F.line = 183;
		failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(183, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_232622.expanded == null)) {
		F.line = 185;
		x_232622.expanded = x_232622.renderImpl(x_232622);
		}
		
		if (!(!((x_232622.expanded == null)))) {
		F.line = 187;
		failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(187, 12) `x.expanded != nil` "));
		}
		
		F.line = 188;
		result_232372 = to_dom_232367(x_232622.expanded, use_attached_node_232370, kxi_232371);
		F.line = 141;
		n_232369.dom = result_232372;
		if (!((n_232369.id == null))) {
		F.line = 142;
		kxi_231324[0].byId[n_232369.id] = n_232369;
		}
		
		F.line = 190;
		break BeforeRet;
		}
		else {
			F.line = 192;
			result_232372 = document.createElement(to_tag_219689[chckIndx(n_232369.kind, 0, (to_tag_219689 != null ? to_tag_219689.length : 0)+0-1)-0]);
			F.line = 141;
			n_232369.dom = result_232372;
			if (!((n_232369.id == null))) {
			F.line = 142;
			kxi_231324[0].byId[n_232369.id] = n_232369;
			}
			
			L1: do {
				F.line = 194;
				var k_233031 = null;
				L2: do {
					F.line = 293;
					var i_257532 = 0;
					F.line = 2737;
					var colontmp__257533 = 0;
					F.line = 293;
					colontmp__257533 = (n_232369.kids != null ? n_232369.kids.length : 0);
					F.line = 2739;
					var i_257534 = 0;
					L3: do {
						F.line = 2740;
							L4: while (true) {
							if (!(i_257534 < colontmp__257533)) break L4;
								F.line = 293;
								i_257532 = i_257534;
								F.line = 194;
								k_233031 = n_232369.kids[chckIndx(i_257532, 0, (n_232369.kids != null ? n_232369.kids.length : 0)+0-1)-0];
								F.line = 195;
								result_232372.appendChild(to_dom_232367(k_233031, use_attached_node_232370, kxi_232371));
								F.line = 2742;
								i_257534 = addInt(i_257534, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_232369.text == null))) {
			F.line = 198;
			result_232372.value = n_232369.text;
			}
			
		}
		}}}}
		if (!((n_232369.id == null))) {
		F.line = 200;
		result_232372.id = n_232369.id;
		}
		
		if (!((n_232369.class == null))) {
		F.line = 202;
		result_232372.className = n_232369.class;
		}
		
		L5: do {
			F.line = 205;
			var k_233032 = null;
			F.line = 205;
			var v_233033 = null;
			L6: do {
				F.line = 296;
				var i_257545 = 0;
				F.line = 2672;
				var colontmp__257546 = 0;
				F.line = 296;
				colontmp__257546 = subInt((n_232369.attrs != null ? n_232369.attrs.length : 0), 2);
				F.line = 2689;
				var res_257547 = 0;
				L7: do {
					F.line = 2690;
						L8: while (true) {
						if (!(res_257547 <= colontmp__257546)) break L8;
							F.line = 296;
							i_257545 = res_257547;
							F.line = 205;
							k_233032 = n_232369.attrs[chckIndx(i_257545, 0, (n_232369.attrs != null ? n_232369.attrs.length : 0)+0-1)-0];
							F.line = 297;
							v_233033 = n_232369.attrs[chckIndx(addInt(i_257545, 1), 0, (n_232369.attrs != null ? n_232369.attrs.length : 0)+0-1)-0];
							if (!((v_233033 == null))) {
							F.line = 207;
							result_232372.setAttribute(k_233032, v_233033);
							}
							
							F.line = 2692;
							res_257547 = addInt(res_257547, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 208;
		apply_events_232286(n_232369);
			if (!!((kxi_232371 == null))) Tmp10 = false; else {				Tmp10 = (n_232369 == kxi_232371.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_232371.toFocus == null);			}		if (Tmp9) {
		F.line = 210;
		kxi_232371.toFocus = result_232372;
		}
		
		if (!((n_232369.style == null))) {
		F.line = 211;
		apply_style_217228(result_232372, n_232369.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_232372;

}

function replace_by_id_233212(id_233214, new_tree_233215) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 235;
		var x_233216 = document.getElementById(id_233214);
		F.line = 236;
		x_233216.parentNode.replaceChild(new_tree_233215, x_233216);
		F.line = 237;
		new_tree_233215.id = id_233214;
	framePtr = F.prev;

	
}

function len_220728(x_220730) {
	var result_220731 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 257;
		result_220731 = (x_220730.kids != null ? x_220730.kids.length : 0);
	framePtr = F.prev;

	return result_220731;

}

function HEX5BHEX5D_220750(x_220752, idx_220753) {
	var result_220754 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 258;
		result_220754 = x_220752.kids[chckIndx(idx_220753, 0, (x_220752.kids != null ? x_220752.kids.length : 0)+0-1)-0];
	framePtr = F.prev;

	return result_220754;

}

function same_233120(n_233122, e_233123, nesting_233124) {
			var Tmp1;
			var Tmp2;

	var result_233126 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_231324[0].orphans.hasOwnProperty(n_233122.id)) {
		F.line = 214;
		result_233126 = true;
		break BeforeRet;
		}
		
		if ((n_233122.kind == 5)) {
		F.line = 216;
		result_233126 = same_233120(n_233122.expanded, e_233123, addInt(nesting_233124, 1));
		}
		else {
		if ((n_233122.kind == 6)) {
		F.line = 218;
		result_233126 = true;
		}
		else {
			if ((n_233122.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_233122.kind == 4);			}		if (Tmp1) {
		F.line = 221;
		result_233126 = true;
		}
		else {
		if ((to_tag_219689[chckIndx(n_233122.kind, 0, (to_tag_219689 != null ? to_tag_219689.length : 0)+0-1)-0] == e_233123.nodeName)) {
		F.line = 223;
		result_233126 = true;
		if (!((n_233122.kind == 0))) {
			if (!!((e_233123.childNodes.length == len_220728(n_233122)))) Tmp2 = false; else {				Tmp2 = !((n_233122.kind == 111));			}		if (Tmp2) {
		F.line = 227;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_220728(n_233122))+""), makeNimstrLit(" real "), cstrToNimstr((e_233123.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_219689[chckIndx(n_233122.kind, 0, (to_tag_219689 != null ? to_tag_219689.length : 0)+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_233124)+""));
		F.line = 228;
		result_233126 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 229;
			var i_233194 = 0;
			F.line = 2737;
			var colontmp__257573 = 0;
			F.line = 229;
			colontmp__257573 = len_220728(n_233122);
			F.line = 2739;
			var i_257574 = 0;
			L4: do {
				F.line = 2740;
					L5: while (true) {
					if (!(i_257574 < colontmp__257573)) break L5;
						F.line = 229;
						i_233194 = i_257574;
						if (!(same_233120(HEX5BHEX5D_220750(n_233122, i_233194), e_233123.childNodes[i_233194], addInt(nesting_233124, 1)))) {
						F.line = 230;
						result_233126 = false;
						break BeforeRet;
						}
						
						F.line = 2742;
						i_257574 = addInt(i_257574, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 232;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_219689[chckIndx(n_233122.kind, 0, (to_tag_219689 != null ? to_tag_219689.length : 0)+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_233123.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_233126;

}

function eq_215814(a_215816, b_215817) {
	var result_215818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_215816 == null)) {
		if ((b_215817 == null)) {
		F.line = 233;
		result_215818 = true;
		break BeforeRet;
		}
		else {
			F.line = 234;
			result_215818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_215817 == null)) {
		F.line = 235;
		result_215818 = false;
		break BeforeRet;
		}
		}
		if (!((a_215816.length == b_215817.length))) {
		F.line = 236;
		result_215818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 237;
			var i_215916 = 0;
			F.line = 2737;
			var colontmp__257616 = 0;
			F.line = 237;
			colontmp__257616 = a_215816.length;
			F.line = 2739;
			var i_257617 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257617 < colontmp__257616)) break L3;
						F.line = 237;
						i_215916 = i_257617;
						if (!((a_215816[i_215916] == b_215817[i_215916]))) {
						F.line = 238;
						result_215818 = false;
						break BeforeRet;
						}
						
						F.line = 2742;
						i_257617 = addInt(i_257617, 1);
					}
			} while(false);
		} while(false);
		F.line = 239;
		result_215818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_215818;

}

function same_attrs_222480(a_222482, b_222483) {
	var result_222484 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_222482.attrs != null ? a_222482.attrs.length : 0) == (b_222483.attrs != null ? b_222483.attrs.length : 0))) {
		F.line = 301;
		result_222484 = true;
		L1: do {
			F.line = 302;
			var i_222507 = 0;
			F.line = 2737;
			var colontmp__257621 = 0;
			F.line = 302;
			colontmp__257621 = (a_222482.attrs != null ? a_222482.attrs.length : 0);
			F.line = 2739;
			var i_257622 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257622 < colontmp__257621)) break L3;
						F.line = 302;
						i_222507 = i_257622;
						if (!((a_222482.attrs[chckIndx(i_222507, 0, (a_222482.attrs != null ? a_222482.attrs.length : 0)+0-1)-0] == b_222483.attrs[chckIndx(i_222507, 0, (b_222483.attrs != null ? b_222483.attrs.length : 0)+0-1)-0]))) {
						F.line = 303;
						result_222484 = false;
						break BeforeRet;
						}
						
						F.line = 2742;
						i_257622 = addInt(i_257622, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_222484;

}

function eq_233414(a_233416, b_233417, recursive_233418) {
			var Tmp4;
			var Tmp5;

	var result_233419 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_233416.kind == b_233417.kind))) {
		F.line = 259;
		result_233419 = 1;
		break BeforeRet;
		}
		
		if (!((a_233416.id == b_233417.id))) {
		F.line = 262;
		result_233419 = 1;
		break BeforeRet;
		}
		
		F.line = 263;
		result_233419 = 3;
		if (!((a_233416.index == b_233417.index))) {
		F.line = 266;
		result_233419 = 1;
		break BeforeRet;
		}
		
		if ((a_233416.kind == 0)) {
		if (!((a_233416.text == b_233417.text))) {
		F.line = 270;
		result_233419 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_233416.kind == 3)) {
		if (!((a_233416.text == b_233417.text))) {
		F.line = 272;
		result_233419 = 1;
		break BeforeRet;
		}
		
		if (!((len_220728(a_233416) == len_220728(b_233417)))) {
		F.line = 273;
		result_233419 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 274;
			var i_234214 = 0;
			F.line = 2737;
			var colontmp__257606 = 0;
			F.line = 274;
			colontmp__257606 = len_220728(a_233416);
			F.line = 2739;
			var i_257607 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257607 < colontmp__257606)) break L3;
						F.line = 274;
						i_234214 = i_257607;
						if ((eq_233414(HEX5BHEX5D_220750(a_233416, i_234214), HEX5BHEX5D_220750(b_233417, i_234214), recursive_233418) == 1)) {
						F.line = 275;
						result_233419 = 1;
						break BeforeRet;
						}
						
						F.line = 2742;
						i_257607 = addInt(i_257607, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_233416.kind == 4)) {
		if ((a_233416.dom == b_233417.dom)) {
		F.line = 278;
		result_233419 = 3;
		break BeforeRet;
		}
		else {
			F.line = 280;
			result_233419 = 1;
			break BeforeRet;
		}
		
		}
		else {
		if ((a_233416.kind == 6)) {
		if (!((a_233416.text == b_233417.text))) {
		F.line = 283;
		result_233419 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_233417.kind == 5)) {
		if (!((a_233416.text == b_233417.text))) {
		F.line = 288;
		result_233419 = 1;
		break BeforeRet;
		}
		
		if (!((a_233416.key == b_233417.key))) {
		F.line = 294;
		result_233419 = 1;
		break BeforeRet;
		}
		
		F.line = 295;
		result_233419 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_233416.class == b_233417.class))) Tmp5 = true; else {				Tmp5 = !(eq_215814(a_233416.style, b_233417.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_222480(a_233416, b_233417));			}		if (Tmp4) {
		F.line = 301;
		result_233419 = 2;
		break BeforeRet;
		}
		
		if (recursive_233418) {
		if (!((len_220728(a_233416) == len_220728(b_233417)))) {
		F.line = 305;
		result_233419 = 1;
		break BeforeRet;
		}
		
		L6: do {
			F.line = 306;
			var i_234808 = 0;
			F.line = 2737;
			var colontmp__257611 = 0;
			F.line = 306;
			colontmp__257611 = len_220728(a_233416);
			F.line = 2739;
			var i_257612 = 0;
			L7: do {
				F.line = 2740;
					L8: while (true) {
					if (!(i_257612 < colontmp__257611)) break L8;
						F.line = 306;
						i_234808 = i_257612;
						if (!((eq_233414(HEX5BHEX5D_220750(a_233416, i_234808), HEX5BHEX5D_220750(b_233417, i_234808), true) == 3))) {
						F.line = 308;
						result_233419 = 1;
						break BeforeRet;
						}
						
						F.line = 2742;
						i_257612 = addInt(i_257612, 1);
					}
			} while(false);
		} while(false);
		}
		
		F.line = 311;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_233419;

}

function update_styles_234842(new_node_234844, old_node_234845) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_234845.dom == null))) {
		if (!((new_node_234844.style == null))) {
		F.line = 316;
		apply_style_217228(old_node_234845.dom, new_node_234844.style);
		}
		else {
			F.line = 317;
			old_node_234845.dom.style = {m_type: NTI209283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, opacity: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 318;
		old_node_234845.dom.className = new_node_234844.class;
		}
		
		F.line = 319;
		old_node_234845.style = new_node_234844.style;
		F.line = 320;
		old_node_234845.class = new_node_234844.class;
	framePtr = F.prev;

	
}

function take_over_attr_220660(new_node_220662, old_node_220663) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 241;
		old_node_220663.attrs = new_node_220662.attrs;
	framePtr = F.prev;

	
}

function update_attributes_234890(new_node_234892, old_node_234893) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_234893.dom == null))) {
		L1: do {
			F.line = 325;
			var k_234902 = null;
			F.line = 325;
			var __234903 = null;
			L2: do {
				F.line = 296;
				var i_257628 = 0;
				F.line = 2672;
				var colontmp__257629 = 0;
				F.line = 296;
				colontmp__257629 = subInt((old_node_234893.attrs != null ? old_node_234893.attrs.length : 0), 2);
				F.line = 2689;
				var res_257630 = 0;
				L3: do {
					F.line = 2690;
						L4: while (true) {
						if (!(res_257630 <= colontmp__257629)) break L4;
							F.line = 296;
							i_257628 = res_257630;
							F.line = 325;
							k_234902 = old_node_234893.attrs[chckIndx(i_257628, 0, (old_node_234893.attrs != null ? old_node_234893.attrs.length : 0)+0-1)-0];
							F.line = 297;
							__234903 = old_node_234893.attrs[chckIndx(addInt(i_257628, 1), 0, (old_node_234893.attrs != null ? old_node_234893.attrs.length : 0)+0-1)-0];
							F.line = 326;
							old_node_234893.dom.removeAttribute(k_234902);
							F.line = 2692;
							res_257630 = addInt(res_257630, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 327;
			var k_234904 = null;
			F.line = 327;
			var v_234905 = null;
			L6: do {
				F.line = 296;
				var i_257636 = 0;
				F.line = 2672;
				var colontmp__257637 = 0;
				F.line = 296;
				colontmp__257637 = subInt((new_node_234892.attrs != null ? new_node_234892.attrs.length : 0), 2);
				F.line = 2689;
				var res_257638 = 0;
				L7: do {
					F.line = 2690;
						L8: while (true) {
						if (!(res_257638 <= colontmp__257637)) break L8;
							F.line = 296;
							i_257636 = res_257638;
							F.line = 327;
							k_234904 = new_node_234892.attrs[chckIndx(i_257636, 0, (new_node_234892.attrs != null ? new_node_234892.attrs.length : 0)+0-1)-0];
							F.line = 297;
							v_234905 = new_node_234892.attrs[chckIndx(addInt(i_257636, 1), 0, (new_node_234892.attrs != null ? new_node_234892.attrs.length : 0)+0-1)-0];
							if (!((v_234905 == null))) {
							F.line = 329;
							old_node_234893.dom.setAttribute(k_234904, v_234905);
							}
							
							F.line = 2692;
							res_257638 = addInt(res_257638, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 330;
		take_over_attr_220660(new_node_234892, old_node_234893);
	framePtr = F.prev;

	
}

function remove_all_event_handlers_231461(d_231463) {
	var F={procname:"karax.removeAllEventHandlers",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((d_231463.karaxEvents == null))) {
		L1: do {
			F.line = 96;
			var i_231504 = 0;
			F.line = 2737;
			var colontmp__257643 = 0;
			F.line = 96;
			colontmp__257643 = d_231463.karaxEvents.length;
			F.line = 2739;
			var i_257644 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257644 < colontmp__257643)) break L3;
						F.line = 96;
						i_231504 = i_257644;
						F.line = 97;
						d_231463.removeEventListener(d_231463.karaxEvents[i_231504]["Field0"], d_231463.karaxEvents[i_231504]["Field1"]);
						F.line = 2742;
						i_257644 = addInt(i_257644, 1);
					}
			} while(false);
		} while(false);
		}
		
	framePtr = F.prev;

	
}

function merge_events_234919(new_node_234921, old_node_234922, kxi_234923) {
	var F={procname:"karax.mergeEvents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 333;
		var d_234924 = old_node_234922.dom;
		if (!((d_234924 == null))) {
		F.line = 335;
		remove_all_event_handlers_231461(d_234924);
		}
		
		F.line = 343;
		old_node_234922.events = new_node_234921.events;
		F.line = 344;
		apply_events_232286(old_node_234922);
	framePtr = F.prev;

	
}

function add_patch_235214(kxi_235216, ka_235217, parenta_235218, currenta_235219, na_235220, old_node_235221) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 361;
		var l_235222 = kxi_235216.patchLen;
		if (((kxi_235216.patches != null ? kxi_235216.patches.length : 0) <= l_235222)) {
		F.line = 364;
		if (kxi_235216.patches != null) { kxi_235216.patches.push({k: ka_235217, parent: parenta_235218, current: currenta_235219, newNode: na_235220, oldNode: old_node_235221}); } else { kxi_235216.patches = [{k: ka_235217, parent: parenta_235218, current: currenta_235219, newNode: na_235220, oldNode: old_node_235221}]; };
		}
		else {
			F.line = 367;
			kxi_235216.patches[chckIndx(l_235222, 0, (kxi_235216.patches != null ? kxi_235216.patches.length : 0)+0-1)-0].k = ka_235217;
			F.line = 368;
			kxi_235216.patches[chckIndx(l_235222, 0, (kxi_235216.patches != null ? kxi_235216.patches.length : 0)+0-1)-0].parent = parenta_235218;
			F.line = 369;
			kxi_235216.patches[chckIndx(l_235222, 0, (kxi_235216.patches != null ? kxi_235216.patches.length : 0)+0-1)-0].current = currenta_235219;
			F.line = 370;
			kxi_235216.patches[chckIndx(l_235222, 0, (kxi_235216.patches != null ? kxi_235216.patches.length : 0)+0-1)-0].newNode = na_235220;
			F.line = 371;
			kxi_235216.patches[chckIndx(l_235222, 0, (kxi_235216.patches != null ? kxi_235216.patches.length : 0)+0-1)-0].oldNode = old_node_235221;
		}
		
		F.line = 372;
		kxi_235216.patchLen = addInt(kxi_235216.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_235645(new_node_235647, old_node_235648, parent_235649, current_235650, kxi_235651) {
				var Tmp1;
						var Tmp6;

	var F={procname:"karax.diff",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 463;
		var result_235801 = eq_233414(new_node_235647, old_node_235648, false);
		F.line = 464;
		switch (result_235801) {
		case 0:
			F.line = 466;
			if (kxi_235651.components != null) { kxi_235651.components.push({oldNode: old_node_235648, newNode: new_node_235647, parent: parent_235649, current: current_235650}); } else { kxi_235651.components = [{oldNode: old_node_235648, newNode: new_node_235647, parent: parent_235649, current: current_235650}]; };
			break;
		case 3:
		case 2:
			F.line = 471;
			new_node_235647.dom = old_node_235648.dom;
			if ((result_235801 == 2)) {
			F.line = 473;
			update_styles_234842(new_node_235647, old_node_235648);
			F.line = 474;
			update_attributes_234890(new_node_235647, old_node_235648);
			if ((old_node_235648.kind == 0)) {
			F.line = 476;
			old_node_235648.text = new_node_235647.text;
			F.line = 477;
			old_node_235648.dom.nodeValue = new_node_235647.text;
			}
			
			}
			
				if (!(((new_node_235647.events != null ? new_node_235647.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_235648.events != null ? old_node_235648.events.length : 0) == 0));				}			if (Tmp1) {
			F.line = 480;
			merge_events_234919(new_node_235647, old_node_235648, kxi_235651);
			}
			
			F.line = 482;
			var new_length_235830 = len_220728(new_node_235647);
			F.line = 483;
			var old_length_235831 = len_220728(old_node_235648);
			if (((new_length_235830 == 0) && (old_length_235831 == 0))) {
			F.line = 484;
			break BeforeRet;
			}
			
			F.line = 485;
			var min_length_235832 = nimMin(new_length_235830, old_length_235831);
			if (!((old_node_235648.kind == new_node_235647.kind))) {
			F.line = 487;
			failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 488;
			var common_prefix_236002 = 0;
			L2: do {
				F.line = 491;
					L3: while (true) {
					if (!(common_prefix_236002 < min_length_235832)) break L3;
						if ((eq_233414(HEX5BHEX5D_220750(new_node_235647, common_prefix_236002), HEX5BHEX5D_220750(old_node_235648, common_prefix_236002), true) == 3)) {
						F.line = 493;
						add_patch_235214(kxi_235651, 5, null, null, HEX5BHEX5D_220750(new_node_235647, common_prefix_236002), HEX5BHEX5D_220750(old_node_235648, common_prefix_236002));
						F.line = 494;
						common_prefix_236002 = addInt(common_prefix_236002, 1);
						}
						else {
							F.line = 496;
							break L2;
						}
						
					}
			} while(false);
			F.line = 499;
			var old_pos_236014 = subInt(old_length_235831, 1);
			F.line = 500;
			var new_pos_236015 = subInt(new_length_235830, 1);
			L4: do {
				F.line = 501;
					L5: while (true) {
						if (!(common_prefix_236002 <= old_pos_236014)) Tmp6 = false; else {							Tmp6 = (common_prefix_236002 <= new_pos_236015);						}					if (!Tmp6) break L5;
						if ((eq_233414(HEX5BHEX5D_220750(new_node_235647, new_pos_236015), HEX5BHEX5D_220750(old_node_235648, old_pos_236014), true) == 3)) {
						F.line = 503;
						add_patch_235214(kxi_235651, 5, null, null, HEX5BHEX5D_220750(new_node_235647, new_pos_236015), HEX5BHEX5D_220750(old_node_235648, old_pos_236014));
						F.line = 504;
						old_pos_236014 = subInt(old_pos_236014, 1);
						F.line = 505;
						new_pos_236015 = subInt(new_pos_236015, 1);
						}
						else {
							F.line = 507;
							break L4;
						}
						
					}
			} while(false);
			F.line = 509;
			var pos_236033 = addInt(nimMin(old_pos_236014, new_pos_236015), 1);
			L7: do {
				F.line = 511;
				var i_236039 = 0;
				F.line = 2699;
				var colontmp__257581 = 0;
				F.line = 511;
				colontmp__257581 = subInt(pos_236033, 1);
				F.line = 2710;
				var res_257582 = common_prefix_236002;
				L8: do {
					F.line = 2711;
						L9: while (true) {
						if (!(res_257582 <= colontmp__257581)) break L9;
							F.line = 511;
							i_236039 = res_257582;
							F.line = 512;
							diff_235645(HEX5BHEX5D_220750(new_node_235647, i_236039), HEX5BHEX5D_220750(old_node_235648, i_236039), current_235650, current_235650.childNodes[chckIndx(i_236039, 0, (current_235650.childNodes != null ? current_235650.childNodes.length : 0)+0-1)-0], kxi_235651);
							F.line = 2713;
							res_257582 = addInt(res_257582, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_236014, 1) == old_length_235831)) {
			L10: do {
				F.line = 515;
				var i_236045 = 0;
				F.line = 2710;
				var res_257588 = pos_236033;
				L11: do {
					F.line = 2711;
						L12: while (true) {
						if (!(res_257588 <= new_pos_236015)) break L12;
							F.line = 515;
							i_236045 = res_257588;
							F.line = 516;
							add_patch_235214(kxi_235651, 2, current_235650, null, HEX5BHEX5D_220750(new_node_235647, i_236045), null);
							F.line = 2713;
							res_257588 = addInt(res_257588, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 518;
				var before_236046 = current_235650.childNodes[chckIndx(addInt(old_pos_236014, 1), 0, (current_235650.childNodes != null ? current_235650.childNodes.length : 0)+0-1)-0];
				L13: do {
					F.line = 519;
					var i_236052 = 0;
					F.line = 2710;
					var res_257594 = pos_236033;
					L14: do {
						F.line = 2711;
							L15: while (true) {
							if (!(res_257594 <= new_pos_236015)) break L15;
								F.line = 519;
								i_236052 = res_257594;
								F.line = 520;
								add_patch_235214(kxi_235651, 3, current_235650, before_236046, HEX5BHEX5D_220750(new_node_235647, i_236052), null);
								F.line = 2713;
								res_257594 = addInt(res_257594, 1);
							}
					} while(false);
				} while(false);
			}
			
			L16: do {
				F.line = 522;
				var i_236058 = 0;
				F.line = 2710;
				var res_257600 = pos_236033;
				L17: do {
					F.line = 2711;
						L18: while (true) {
						if (!(res_257600 <= old_pos_236014)) break L18;
							F.line = 522;
							i_236058 = res_257600;
							F.line = 523;
							add_patch_235214(kxi_231324[0], 4, null, null, null, HEX5BHEX5D_220750(old_node_235648, i_236058));
							F.line = 525;
							add_patch_235214(kxi_235651, 1, current_235650, current_235650.childNodes[chckIndx(i_236058, 0, (current_235650.childNodes != null ? current_235650.childNodes.length : 0)+0-1)-0], null, null);
							F.line = 2713;
							res_257600 = addInt(res_257600, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 527;
			add_patch_235214(kxi_231324[0], 4, null, null, null, old_node_235648);
			F.line = 528;
			add_patch_235214(kxi_235651, 0, parent_235649, current_235650, new_node_235647, null);
			break;
		case 4:
			if (true) {
			F.line = 529;
			failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(529, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	
}

function apply_components_236414(kxi_236416) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 537;
		var i_236418 = 0;
		L1: do {
			F.line = 540;
				L2: while (true) {
				if (!(i_236418 < (kxi_236416.components != null ? kxi_236416.components.length : 0))) break L2;
					F.line = 541;
					var x_236424 = kxi_236416.components[chckIndx(i_236418, 0, (kxi_236416.components != null ? kxi_236416.components.length : 0)+0-1)-0].oldNode;
					F.line = 542;
					var new_node_236425 = kxi_236416.components[chckIndx(i_236418, 0, (kxi_236416.components != null ? kxi_236416.components.length : 0)+0-1)-0].newNode;
						if (!!((x_236424.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_236424.changedImpl(x_236424, new_node_236425);						}					if (Tmp3) {
					F.line = 548;
					var current_236801 = kxi_236416.components[chckIndx(i_236418, 0, (kxi_236416.components != null ? kxi_236416.components.length : 0)+0-1)-0].current;
					F.line = 549;
					var parent_236802 = kxi_236416.components[chckIndx(i_236418, 0, (kxi_236416.components != null ? kxi_236416.components.length : 0)+0-1)-0].parent;
					F.line = 550;
					x_236424.updatedImpl(x_236424, new_node_236425);
					F.line = 551;
					var old_expanded_236803 = x_236424.expanded;
					F.line = 552;
					x_236424.expanded = x_236424.renderImpl(x_236424);
					F.line = 555;
					x_236424.renderedVersion = x_236424.version;
					if ((old_expanded_236803 == null)) {
					F.line = 557;
					add_patch_235214(kxi_231324[0], 4, null, null, null, x_236424);
					F.line = 558;
					add_patch_235214(kxi_236416, 0, parent_236802, current_236801, x_236424.expanded, null);
					}
					else {
						F.line = 562;
						diff_235645(x_236424.expanded, old_expanded_236803, parent_236802, current_236801, kxi_236416);
					}
					
					}
					
					F.line = 577;
					i_236418 = addInt(i_236418, 1);
				}
		} while(false);
		F.line = 578;
		if (kxi_236416.components === null) kxi_236416.components = [];
               if (kxi_236416.components.length < 0) { for (var i=kxi_236416.components.length;i<0;++i) kxi_236416.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_236416.components.length = 0; };
	framePtr = F.prev;

	
}

function move_dom_235307(dest_235309, src_235310) {
	var F={procname:"karax.moveDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 386;
		dest_235309.dom = src_235310.dom;
		F.line = 387;
		src_235310.dom = null;
		if (!((dest_235309.id == null))) {
		F.line = 389;
		kxi_231324[0].byId[dest_235309.id] = dest_235309;
		}
		
		if (!((len_220728(dest_235309) == len_220728(src_235310)))) {
		F.line = 390;
		failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(390, 10) `dest.len == src.len` "));
		}
		
		L1: do {
			F.line = 391;
			var i_235408 = 0;
			F.line = 2737;
			var colontmp__257660 = 0;
			F.line = 391;
			colontmp__257660 = len_220728(dest_235309);
			F.line = 2739;
			var i_257661 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257661 < colontmp__257660)) break L3;
						F.line = 391;
						i_235408 = i_257661;
						F.line = 392;
						move_dom_235307(HEX5BHEX5D_220750(dest_235309, i_235408), HEX5BHEX5D_220750(src_235310, i_235408));
						F.line = 2742;
						i_257661 = addInt(i_257661, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_220768(x_220770, idx_220771, y_220772) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		x_220770.kids[chckIndx(idx_220771, 0, (x_220770.kids != null ? x_220770.kids.length : 0)+0-1)-0] = y_220772;
	framePtr = F.prev;

	
}

function apply_patch_235422(kxi_235424) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 395;
			var i_235432 = 0;
			F.line = 2737;
			var colontmp__257650 = 0;
			F.line = 395;
			colontmp__257650 = kxi_235424.patchLen;
			F.line = 2739;
			var i_257651 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257651 < colontmp__257650)) break L3;
						F.line = 395;
						i_235432 = i_257651;
						F.line = 396;
						var p_235433 = nimCopy(null, kxi_235424.patches[chckIndx(i_235432, 0, (kxi_235424.patches != null ? kxi_235424.patches.length : 0)+0-1)-0], NTI231209);
						F.line = 397;
						switch (p_235433.k) {
						case 0:
							F.line = 399;
							var nn_235434 = to_dom_232367(p_235433.newNode, true, kxi_235424);
							if ((p_235433.parent == null)) {
							F.line = 401;
							replace_by_id_233212(kxi_235424.rootId, nn_235434);
							}
							else {
								if ((p_235433.current.parentNode == p_235433.parent)) {
								F.line = 404;
								p_235433.parent.replaceChild(nn_235434, p_235433.current);
								}
								else {
									F.line = 406;
								p_235433.parent.appendChild(nn_235434);
								}
								
							}
							
							break;
						case 5:
							F.line = 408;
							move_dom_235307(p_235433.newNode, p_235433.oldNode);
							break;
						case 1:
							F.line = 410;
							p_235433.parent.removeChild(p_235433.current);
							break;
						case 2:
							F.line = 412;
							var nn_235450 = to_dom_232367(p_235433.newNode, true, kxi_235424);
							F.line = 413;
							p_235433.parent.appendChild(nn_235450);
							break;
						case 3:
							F.line = 415;
							var nn_235451 = to_dom_232367(p_235433.newNode, true, kxi_235424);
							F.line = 416;
							p_235433.parent.insertBefore(nn_235451, p_235433.current);
							break;
						case 4:
							F.line = 418;
							var n_235452 = p_235433.oldNode;
							if (!((n_235452.id == null))) {
							F.line = 419;
							delete kxi_235424.byId[n_235452.id];
							}
							
							if ((n_235452.kind == 5)) {
							F.line = 421;
							var x_235470 = n_235452;
							if (!((x_235470.onDetachImpl == null))) {
							F.line = 422;
							x_235470.onDetachImpl(x_235470);
							}
							
							}
							
							if (!(kxi_235424.surpressRedraws)) {
							F.line = 424;
							n_235452.dom = null;
							}
							
							break;
						}
						F.line = 2742;
						i_257651 = addInt(i_257651, 1);
					}
			} while(false);
		} while(false);
		F.line = 425;
		kxi_235424.patchLen = 0;
		L4: do {
			F.line = 426;
			var i_235483 = 0;
			F.line = 2737;
			var colontmp__257655 = 0;
			F.line = 426;
			colontmp__257655 = kxi_235424.patchLenV;
			F.line = 2739;
			var i_257656 = 0;
			L5: do {
				F.line = 2740;
					L6: while (true) {
					if (!(i_257656 < colontmp__257655)) break L6;
						F.line = 426;
						i_235483 = i_257656;
						F.line = 427;
						var p_235484 = nimCopy(null, kxi_235424.patchesV[chckIndx(i_235483, 0, (kxi_235424.patchesV != null ? kxi_235424.patchesV.length : 0)+0-1)-0], NTI231211);
						F.line = 428;
						HEX5BHEX5DHEX3D_220768(p_235484.parent, p_235484.pos, p_235484.newChild);
						if (!(!((p_235484.newChild.dom == null)))) {
						F.line = 429;
						failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(429, 12) `p.newChild.dom != nil` "));
						}
						
						F.line = 2742;
						i_257656 = addInt(i_257656, 1);
					}
			} while(false);
		} while(false);
		F.line = 430;
		kxi_235424.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_238462(kxi_238464) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_238464.renderer == null)) {
		F.line = 634;
		break BeforeRet;
		}
		
		F.line = 635;
		var rdata_238469 = {hashPart: window.location.hash};
		F.line = 636;
		var newtree_238470 = kxi_238464.renderer(rdata_238469);
		F.line = 637;
		kxi_238464.runCount = addInt(kxi_238464.runCount, 1);
		F.line = 638;
		newtree_238470.id = kxi_238464.rootId;
		F.line = 639;
		kxi_238464.toFocus = null;
		if ((kxi_238464.currentTree == null)) {
		F.line = 641;
		var asdom_238485 = to_dom_232367(newtree_238470, true, kxi_238464);
		F.line = 642;
		replace_by_id_233212(kxi_238464.rootId, asdom_238485);
		}
		else {
			if (!(same_233120(kxi_238464.currentTree, document.getElementById(kxi_238464.rootId), 0))) {
			F.line = 644;
			failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			F.line = 645;
			var olddom_238601 = document.getElementById(kxi_238464.rootId);
			F.line = 646;
			diff_235645(newtree_238470, kxi_238464.currentTree, null, olddom_238601, kxi_238464);
		}
		
		F.line = 650;
		apply_components_236414(kxi_238464);
		F.line = 655;
		apply_patch_235422(kxi_238464);
		F.line = 656;
		kxi_238464.currentTree = newtree_238470;
		if (!(same_233120(kxi_238464.currentTree, document.getElementById(kxi_238464.rootId), 0))) {
		F.line = 657;
		failed_assert_impl_15266(makeNimstrLit("/home/ormiret/.nimble/pkgs/karax-1.2.1/karax/karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_238464.postRenderCallback == null))) {
		F.line = 660;
		kxi_238464.postRenderCallback(rdata_238469);
		}
		
		if (!((kxi_238464.toFocus == null))) {
		F.line = 664;
		kxi_238464.toFocus.focus();
		}
		
		F.line = 665;
		kxi_238464.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function redraw_239614(kxi_239616) {

		function HEX3Aanonymous_239801() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 683;
				dodraw_238462(kxi_239616);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((kxi_239616.renderId == 0)) {
		F.line = 683;
		kxi_239616.renderId = window.requestAnimationFrame(HEX3Aanonymous_239801);
		}
		
	framePtr = F.prev;

	
}

function ajax_251335(meth_251337, url_251338, headers_251341, data_251342, cont_251347, do_redraw_251348, kxi_251349, use_binary_251350, blob_251351) {

function cont_wrapper_251352(http_status_251354, response_251355) {
	var F={procname:"ajax.contWrapper",prev:framePtr,filename:"kajax.nim",line:0};
	framePtr = F;
		F.line = 76;
		cont_251347(http_status_251354, response_251355);
		if (do_redraw_251348) {
		F.line = 77;
		redraw_239614(kxi_251349);
		}
		
	framePtr = F.prev;

	
}

		function HEX3Aanonymous_251378() {
			var F={procname:"ajax.:anonymous",prev:framePtr,filename:"kajax.nim",line:0};
			framePtr = F;
				if ((this.readyState == 4)) {
				if ((this.status == 200)) {
				F.line = 88;
				cont_wrapper_251352(this.status, this.responseText);
				}
				else {
					F.line = 90;
				cont_wrapper_251352(this.status, this.responseText);
				}
				
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"kajax.ajax",prev:framePtr,filename:"kajax.nim",line:0};
	framePtr = F;
		F.line = 81;
		var ajax_251370 = new XMLHttpRequest();
		F.line = 82;
		ajax_251370.open(meth_251337, url_251338, true);
		L1: do {
			F.line = 83;
			var a_251376 = null;
			F.line = 83;
			var b_251377 = null;
			F.line = 3;
			var i_257522 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_257522 < (headers_251341 != null ? headers_251341.length : 0))) break L3;
						F.line = 83;
						a_251376 = headers_251341[chckIndx(i_257522, 0, (headers_251341 != null ? headers_251341.length : 0)+0-1)-0]["Field0"];
						F.line = 5;
						b_251377 = headers_251341[chckIndx(i_257522, 0, (headers_251341 != null ? headers_251341.length : 0)+0-1)-0]["Field1"];
						F.line = 84;
						ajax_251370.setRequestHeader(a_251376, b_251377);
						F.line = 6;
						i_257522 = addInt(i_257522, 1);
					}
			} while(false);
		} while(false);
		F.line = 85;
		ajax_251370.onreadystatechange = HEX3Aanonymous_251378;
		if (use_binary_251350) {
		F.line = 92;
		ajax_251370.send(blob_251351);
		}
		else {
			F.line = 94;
		ajax_251370.send(data_251342);
		}
		
	framePtr = F.prev;

	
}

function ajax_get_251462(url_251464, headers_251467, cont_251472, do_redraw_251473, kxi_251474) {
	var F={procname:"kajax.ajaxGet",prev:framePtr,filename:"kajax.nim",line:0};
	framePtr = F;
		F.line = 114;
		ajax_251335("GET", url_251464, headers_251467, null, cont_251472, do_redraw_251473, kxi_251474, false, null);
	framePtr = F.prev;

	
}

function get_var_type_200709(x_200711) {
	var result_200712 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 887;
		result_200712 = 0;
		F.line = 890;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_200711)))) {
		case "[object Array]":
			F.line = 891;
			result_200712 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 892;
			result_200712 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_200711 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 895;
			result_200712 = 2;
			break BeforeRet;
			}
			else {
				F.line = 897;
				result_200712 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 898;
			result_200712 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 899;
			result_200712 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 900;
			result_200712 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 901;
			failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(901, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_200712;

}

function new_jarray_181657() {
	var result_181659 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 214;
		result_181659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
	framePtr = F.prev;

	return result_181659;

}

function len_200829(x_200831) {
	var result_200832 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_200709(x_200831) == 6))) {
		F.line = 904;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(904, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 905;
		      result_200832 = x_200831.length;
    
	framePtr = F.prev;

	return result_200832;

}

function add_181995(father_181997, child_181998) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((father_181997.kind == 6))) {
		F.line = 284;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(284, 10) `father.kind == JArray` "));
		}
		
		F.line = 285;
		var Tmp1 = father_181997;
		if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_181998); } else { Tmp2 = [child_181998]; };
	framePtr = F.prev;

	
}

function HEX5BHEX5D_201214(x_201216, y_201217) {
	var result_201218 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_200709(x_201216) == 6))) {
		F.line = 916;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(916, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 917;
		      result_201218 = x_201216[y_201217];
    
	framePtr = F.prev;

	return result_201218;

}

function is_power_of_two_60062(x_60064) {
		var Tmp1;

	var result_60065 = false;

	BeforeRet: do {
		if (!(0 < x_60064)) Tmp1 = false; else {			Tmp1 = ((x_60064 & (x_60064 - 1)) == 0);		}		result_60065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_60065;

}

function raiseRangeError() {
		var eHEX60gensym22457_22603 = null;
		eHEX60gensym22457_22603 = {m_type: NTI3662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22457_22603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		eHEX60gensym22457_22603.parent = null;
		raiseException(eHEX60gensym22457_22603, "RangeError");

	
}

function init_ordered_table_181209(initial_size_181213) {
	var result_181215 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_60062(initial_size_181213))) {
		F.line = 118;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_181215.counter = 0;
		F.line = 120;
		result_181215.data = new Array(chckRange(initial_size_181213, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_181213, 0, 2147483647);++i) {result_181215.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		result_181215.first = -1;
		F.line = 123;
		result_181215.last = -1;
	framePtr = F.prev;

	return result_181215;

}

function new_jobject_181204() {
	var result_181206 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 210;
		result_181206 = {kind: 5, fields: init_ordered_table_181209(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
	framePtr = F.prev;

	return result_181206;

}

function raiseDivByZero() {
		var eHEX60gensym22257_22403 = null;
		eHEX60gensym22257_22403 = {m_type: NTI3644, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22257_22403.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		eHEX60gensym22257_22403.parent = null;
		raiseException(eHEX60gensym22257_22403, "DivByZeroError");

	
}

function imul_52768(a_52770, b_52771) {
	var result_52772 = 0;

	var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 154;
		var mask_52773 = 65535;
		F.line = 156;
		var a_hi_52786 = (((a_52770 >>> 0) >>> 16) & mask_52773);
		F.line = 157;
		var a_lo_52792 = (a_52770 & mask_52773);
		F.line = 158;
		var b_hi_52805 = (((b_52771 >>> 0) >>> 16) & mask_52773);
		F.line = 159;
		var b_lo_52811 = (b_52771 & mask_52773);
		F.line = 160;
		result_52772 = ((((a_lo_52792 * b_lo_52811) >>> 0) + (((((a_hi_52786 * b_lo_52811) >>> 0) + ((a_lo_52792 * b_hi_52805) >>> 0)) >>> 0) << 16)) >>> 0);
	framePtr = F.prev;

	return result_52772;

}

function rotl32_53001(x_53003, r_53004) {
	var result_53005 = 0;

	var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 165;
		result_53005 = ((x_53003 << r_53004) | ((x_53003 >>> 0) >>> subInt(32, r_53004)));
	framePtr = F.prev;

	return result_53005;

}

function murmur_hash_53037(x_53040) {
	var result_53041 = 0;

	var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 176;
		var size_53051 = (x_53040 != null ? x_53040.length : 0);
		F.line = 177;
		var step_size_53053 = 4;
		F.line = 178;
		var n_53054 = divInt(size_53051, step_size_53053);
		F.line = 180;
		var h1_53055 = 0;
		F.line = 181;
		var i_53057 = 0;
		L1: do {
			F.line = 184;
				L2: while (true) {
				if (!(i_53057 < mulInt(n_53054, step_size_53053))) break L2;
					F.line = 185;
					var k1_53058 = 0;
					F.line = 187;
					var j_53059 = step_size_53053;
					L3: do {
						F.line = 188;
							L4: while (true) {
							if (!(0 < j_53059)) break L4;
								F.line = 189;
								j_53059 = subInt(j_53059, 1);
								F.line = 190;
								k1_53058 = ((k1_53058 << 8) | x_53040[chckIndx(addInt(i_53057, j_53059), 0, (x_53040 != null ? x_53040.length : 0)+0-1)-0]);
							}
					} while(false);
					F.line = 193;
					i_53057 = addInt(i_53057, step_size_53053);
					F.line = 195;
					k1_53058 = imul_52768(k1_53058, 3432918353);
					F.line = 196;
					k1_53058 = rotl32_53001(k1_53058, 15);
					F.line = 197;
					k1_53058 = imul_52768(k1_53058, 461845907);
					F.line = 199;
					h1_53055 = (h1_53055 ^ k1_53058);
					F.line = 200;
					h1_53055 = rotl32_53001(h1_53055, 13);
					F.line = 201;
					h1_53055 = ((((h1_53055 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		F.line = 204;
		var k1_53223 = 0;
		F.line = 205;
		var rem_53224 = modInt(size_53051, step_size_53053);
		L5: do {
			F.line = 206;
				L6: while (true) {
				if (!(0 < rem_53224)) break L6;
					F.line = 207;
					rem_53224 = subInt(rem_53224, 1);
					F.line = 208;
					k1_53223 = ((k1_53223 << 8) | x_53040[chckIndx(addInt(i_53057, rem_53224), 0, (x_53040 != null ? x_53040.length : 0)+0-1)-0]);
				}
		} while(false);
		F.line = 209;
		k1_53223 = imul_52768(k1_53223, 3432918353);
		F.line = 210;
		k1_53223 = rotl32_53001(k1_53223, 15);
		F.line = 211;
		k1_53223 = imul_52768(k1_53223, 461845907);
		F.line = 212;
		h1_53055 = (h1_53055 ^ k1_53223);
		F.line = 215;
		h1_53055 = (h1_53055 ^ size_53051);
		F.line = 216;
		h1_53055 = (h1_53055 ^ ((h1_53055 >>> 0) >>> 16));
		F.line = 217;
		h1_53055 = imul_52768(h1_53055, 2246822507);
		F.line = 218;
		h1_53055 = (h1_53055 ^ ((h1_53055 >>> 0) >>> 13));
		F.line = 219;
		h1_53055 = imul_52768(h1_53055, 3266489909);
		F.line = 220;
		h1_53055 = (h1_53055 ^ ((h1_53055 >>> 0) >>> 16));
		F.line = 221;
		result_53041 = (h1_53055|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_53041;

}

function hash_53814(x_53816) {
	var result_53817 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 250;
		result_53817 = murmur_hash_53037((x_53816.slice(0, (x_53816 != null ? (x_53816.length-1) : -1)+1)));
	framePtr = F.prev;

	return result_53817;

}

function is_filled_67018(hcode_67020) {
	var result_67021 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_67021 = !((hcode_67020 == 0));
	framePtr = F.prev;

	return result_67021;

}

function next_try_67035(h_67037, max_hash_67038) {
	var result_67039 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_67039 = (addInt(h_67037, 1) & max_hash_67038);
	framePtr = F.prev;

	return result_67039;

}

function raw_get_183021(t_183026, key_183027, hc_183028, hc_183028_Idx) {
						var Tmp3;

	var result_183029 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_183028[hc_183028_Idx] = hash_53814(key_183027);
		if ((hc_183028[hc_183028_Idx] == 0)) {
		F.line = 56;
		hc_183028[hc_183028_Idx] = 314159265;
		}
		
		if (((t_183026.data != null ? t_183026.data.length : 0) == 0)) {
		F.line = 38;
		result_183029 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_183171 = (hc_183028[hc_183028_Idx] & (t_183026.data != null ? (t_183026.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_67018(t_183026.data[chckIndx(h_183171, 0, (t_183026.data != null ? t_183026.data.length : 0)+0-1)-0].Field0)) break L2;
						if (!(t_183026.data[chckIndx(h_183171, 0, (t_183026.data != null ? t_183026.data.length : 0)+0-1)-0].Field0 == hc_183028[hc_183028_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_183026.data[chckIndx(h_183171, 0, (t_183026.data != null ? t_183026.data.length : 0)+0-1)-0].Field2, key_183027);						}					if (Tmp3) {
					F.line = 46;
					result_183029 = h_183171;
					break BeforeRet;
					}
					
					F.line = 47;
					h_183171 = next_try_67035(h_183171, (t_183026.data != null ? (t_183026.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_183029 = subInt(-1, h_183171);
	} while (false);
	framePtr = F.prev;

	return result_183029;

}

function must_rehash_67053(length_67055, counter_67056) {
	var result_67057 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_67056 < length_67055))) {
		F.line = 33;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_67057 = ((mulInt(length_67055, 2) < mulInt(counter_67056, 3)) || (subInt(length_67055, counter_67056) < 4));
	framePtr = F.prev;

	return result_67057;

}

function raw_insert_185465(t_185471, data_185474, data_185474_Idx, key_185475, val_185476, hc_185477, h_185478) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_185474[data_185474_Idx][chckIndx(h_185478, 0, (data_185474[data_185474_Idx] != null ? data_185474[data_185474_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_185475, NTI138);
		F.line = 23;
		data_185474[data_185474_Idx][chckIndx(h_185478, 0, (data_185474[data_185474_Idx] != null ? data_185474[data_185474_Idx].length : 0)+0-1)-0].Field3 = val_185476;
		F.line = 24;
		data_185474[data_185474_Idx][chckIndx(h_185478, 0, (data_185474[data_185474_Idx] != null ? data_185474[data_185474_Idx].length : 0)+0-1)-0].Field0 = hc_185477;
		F.line = 1234;
		data_185474[data_185474_Idx][chckIndx(h_185478, 0, (data_185474[data_185474_Idx] != null ? data_185474[data_185474_Idx].length : 0)+0-1)-0].Field1 = -1;
		if ((t_185471.first < 0)) {
		F.line = 1235;
		t_185471.first = h_185478;
		}
		
		if ((0 <= t_185471.last)) {
		F.line = 1236;
		data_185474[data_185474_Idx][chckIndx(t_185471.last, 0, (data_185474[data_185474_Idx] != null ? data_185474[data_185474_Idx].length : 0)+0-1)-0].Field1 = h_185478;
		}
		
		F.line = 1237;
		t_185471.last = h_185478;
	framePtr = F.prev;

	
}

function enlarge_184367(t_184373) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1240;
		var n_184381 = null;
		F.line = 1241;
		n_184381 = new Array(chckRange(mulInt((t_184373.data != null ? t_184373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_184373.data != null ? t_184373.data.length : 0), 2), 0, 2147483647);++i) {n_184381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1242;
		var h_184520 = t_184373.first;
		F.line = 1243;
		t_184373.first = -1;
		F.line = 1244;
		t_184373.last = -1;
		F.line = 1245;
		var Tmp1 = t_184373.data; t_184373.data = n_184381; n_184381 = Tmp1;		L2: do {
			F.line = 1246;
				L3: while (true) {
				if (!(0 <= h_184520)) break L3;
					F.line = 1247;
					var nxt_184679 = n_184381[chckIndx(h_184520, 0, (n_184381 != null ? n_184381.length : 0)+0-1)-0].Field1;
					F.line = 1248;
					var eh_184828 = n_184381[chckIndx(h_184520, 0, (n_184381 != null ? n_184381.length : 0)+0-1)-0].Field0;
					if (is_filled_67018(eh_184828)) {
					F.line = 1250;
					var j_184835 = (eh_184828 & (t_184373.data != null ? (t_184373.data.length-1) : -1));
					L4: do {
						F.line = 1251;
							L5: while (true) {
							if (!is_filled_67018(t_184373.data[chckIndx(j_184835, 0, (t_184373.data != null ? t_184373.data.length : 0)+0-1)-0].Field0)) break L5;
								F.line = 1252;
								j_184835 = next_try_67035(j_184835, (t_184373.data != null ? (t_184373.data.length-1) : -1));
							}
					} while(false);
					F.line = 1253;
					raw_insert_185465(t_184373, t_184373, "data", n_184381[chckIndx(h_184520, 0, (n_184381 != null ? n_184381.length : 0)+0-1)-0].Field2, n_184381[chckIndx(h_184520, 0, (n_184381 != null ? n_184381.length : 0)+0-1)-0].Field3, n_184381[chckIndx(h_184520, 0, (n_184381 != null ? n_184381.length : 0)+0-1)-0].Field0, j_184835);
					}
					
					F.line = 1254;
					h_184520 = nxt_184679;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_186267(t_186272, key_186273, hc_186274) {
	var result_186275 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_186272.data != null ? t_186272.data.length : 0) == 0)) {
		F.line = 38;
		result_186275 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_186414 = (hc_186274 & (t_186272.data != null ? (t_186272.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_67018(t_186272.data[chckIndx(h_186414, 0, (t_186272.data != null ? t_186272.data.length : 0)+0-1)-0].Field0)) break L2;
					if (((t_186272.data[chckIndx(h_186414, 0, (t_186272.data != null ? t_186272.data.length : 0)+0-1)-0].Field0 == hc_186274) && eqStrings(t_186272.data[chckIndx(h_186414, 0, (t_186272.data != null ? t_186272.data.length : 0)+0-1)-0].Field2, key_186273))) {
					F.line = 46;
					result_186275 = h_186414;
					break BeforeRet;
					}
					
					F.line = 47;
					h_186414 = next_try_67035(h_186414, (t_186272.data != null ? (t_186272.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_186275 = subInt(-1, h_186414);
	} while (false);
	framePtr = F.prev;

	return result_186275;

}

function HEX5BHEX5DHEX3D_182511(t_182517, key_182518, val_182519) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_182517.data != null ? t_182517.data.length : 0) == 0)) {
		if (!(is_power_of_two_60062(64))) {
		F.line = 118;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_182517.counter = 0;
		F.line = 120;
		t_182517.data = new Array(64); for (var i=0;i<64;++i) {t_182517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		t_182517.first = -1;
		F.line = 123;
		t_182517.last = -1;
		}
		
		F.line = 57;
		var hc_183001 = [0];
		F.line = 58;
		var index_183639 = raw_get_183021(t_182517, key_182518, hc_183001, 0);
		if ((0 <= index_183639)) {
		F.line = 59;
		t_182517.data[chckIndx(index_183639, 0, (t_182517.data != null ? t_182517.data.length : 0)+0-1)-0].Field3 = val_182519;
		}
		else {
			if (((t_182517.data != null ? t_182517.data.length : 0) == 0)) {
			if (!(is_power_of_two_60062(64))) {
			F.line = 118;
			failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_182517.counter = 0;
			F.line = 120;
			t_182517.data = new Array(64); for (var i=0;i<64;++i) {t_182517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			F.line = 122;
			t_182517.first = -1;
			F.line = 123;
			t_182517.last = -1;
			}
			
			if (must_rehash_67053((t_182517.data != null ? t_182517.data.length : 0), t_182517.counter)) {
			F.line = 49;
			enlarge_184367(t_182517);
			F.line = 50;
			index_183639 = raw_get_known_hc_186267(t_182517, key_182518, hc_183001[0]);
			}
			
			F.line = 51;
			index_183639 = subInt(-1, index_183639);
			F.line = 52;
			raw_insert_185465(t_182517, t_182517, "data", key_182518, val_182519, hc_183001[0], index_183639);
			F.line = 60;
			t_182517.counter = addInt(t_182517.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_187414(obj_187416, key_187417, val_187418) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((obj_187416.kind == 5))) {
		F.line = 358;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(358, 9) `obj.kind == JObject` "));
		}
		
		F.line = 359;
		var Tmp1 = obj_187416;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		HEX5BHEX5DHEX3D_182511(Tmp1.fields, key_187417, val_187418);
	framePtr = F.prev;

	
}

function new_jint_181137(n_181139) {
	var result_181140 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 194;
		result_181140 = {kind: 2, num: n_181139, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_181140;

}

function new_jfloat_181154(n_181156) {
	var result_181157 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 198;
		result_181157 = {kind: 3, fnum: n_181156, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_181157;

}

function new_jstring_181087(s_181089) {
	var result_181090 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 186;
		result_181090 = {kind: 4, str: nimCopy(null, s_181089, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_181090;

}

function new_jbool_181171(b_181173) {
	var result_181174 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 202;
		result_181174 = {kind: 1, bval: b_181173, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_181174;

}

function new_jnull_181188() {
	var result_181190 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 206;
		result_181190 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_181190;

}

function convert_object_201414(x_201416) {
	var result_201417 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 922;
		switch (get_var_type_200709(x_201416)) {
		case 6:
			F.line = 924;
			result_201417 = new_jarray_181657();
			L1: do {
				F.line = 925;
				var i_201425 = 0;
				F.line = 2737;
				var colontmp__257679 = 0;
				F.line = 925;
				colontmp__257679 = len_200829(x_201416);
				F.line = 2739;
				var i_257680 = 0;
				L2: do {
					F.line = 2740;
						L3: while (true) {
						if (!(i_257680 < colontmp__257679)) break L3;
							F.line = 925;
							i_201425 = i_257680;
							F.line = 926;
							add_181995(result_201417, convert_object_201414(HEX5BHEX5D_201214(x_201416, i_201425)));
							F.line = 2742;
							i_257680 = addInt(i_257680, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 928;
			result_201417 = new_jobject_181204();
			F.line = 929;
			for (var property in x_201416) {
        if (x_201416.hasOwnProperty(property)) {
      
			F.line = 932;
			var nim_property_201427 = null;
			F.line = 933;
			var nim_value_201428 = {};
			F.line = 934;
			nim_property_201427 = property; nim_value_201428 = x_201416[property];
			F.line = 935;
			HEX5BHEX5DHEX3D_187414(result_201417, cstrToNimstr(nim_property_201427), convert_object_201414(nim_value_201428));
			F.line = 936;
			}}
			break;
		case 2:
			F.line = 938;
			result_201417 = new_jint_181137(x_201416);
			break;
		case 3:
			F.line = 940;
			result_201417 = new_jfloat_181154(x_201416);
			break;
		case 4:
			F.line = 942;
			result_201417 = new_jstring_181087(cstrToNimstr(x_201416));
			break;
		case 1:
			F.line = 944;
			result_201417 = new_jbool_181171(x_201416);
			break;
		case 0:
			F.line = 946;
			result_201417 = new_jnull_181188();
			break;
		}
	framePtr = F.prev;

	return result_201417;

}

function parse_json_201457(buffer_201459) {
	var result_201460 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 949;
		result_201460 = convert_object_201414(JSON.parse(toJSStr(buffer_201459)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_201460;

}

function raw_get_190333(t_190337, key_190338, hc_190339, hc_190339_Idx) {
						var Tmp3;

	var result_190340 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_190339[hc_190339_Idx] = hash_53814(key_190338);
		if ((hc_190339[hc_190339_Idx] == 0)) {
		F.line = 56;
		hc_190339[hc_190339_Idx] = 314159265;
		}
		
		if (((t_190337.data != null ? t_190337.data.length : 0) == 0)) {
		F.line = 38;
		result_190340 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_190482 = (hc_190339[hc_190339_Idx] & (t_190337.data != null ? (t_190337.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_67018(t_190337.data[chckIndx(h_190482, 0, (t_190337.data != null ? t_190337.data.length : 0)+0-1)-0].Field0)) break L2;
						if (!(t_190337.data[chckIndx(h_190482, 0, (t_190337.data != null ? t_190337.data.length : 0)+0-1)-0].Field0 == hc_190339[hc_190339_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_190337.data[chckIndx(h_190482, 0, (t_190337.data != null ? t_190337.data.length : 0)+0-1)-0].Field2, key_190338);						}					if (Tmp3) {
					F.line = 46;
					result_190340 = h_190482;
					break BeforeRet;
					}
					
					F.line = 47;
					h_190482 = next_try_67035(h_190482, (t_190337.data != null ? (t_190337.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_190340 = subInt(-1, h_190482);
	} while (false);
	framePtr = F.prev;

	return result_190340;

}

function HEX5BHEX5D_190322(t_190328, key_190329) {
	var result_190331 = null;
	var result_190331_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 259;
		var hcHEX60gensym68648_190332 = [0];
		F.line = 260;
		var indexHEX60gensym68649_190950 = raw_get_190333(t_190328, key_190329, hcHEX60gensym68648_190332, 0);
		if ((0 <= indexHEX60gensym68649_190950)) {
		F.line = 261;
		result_190331 = t_190328.data[chckIndx(indexHEX60gensym68649_190950, 0, (t_190328.data != null ? t_190328.data.length : 0)+0-1)-0]; result_190331_Idx = "Field3";
		}
		else {
			F.line = 3478;
			var eHEX60gensym191203_191403 = null;
			F.line = 3481;
			eHEX60gensym191203_191403 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 264;
			eHEX60gensym191203_191403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_190329 || []), NTI138);
			F.line = 3474;
			eHEX60gensym191203_191403.parent = null;
			F.line = 264;
			raiseException(eHEX60gensym191203_191403, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_190331, result_190331_Idx];

}

function HEX5BHEX5D_191856(node_191858, name_191859) {
		var Tmp1;
		var Tmp2;

	var result_191860 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!(!((node_191858 == null)))) {
		F.line = 476;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(476, 9) `not isNil(node)` "));
		}
		
		if (!((node_191858.kind == 5))) {
		F.line = 477;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(477, 9) `node.kind == JObject` "));
		}
		
		F.line = 480;
		var Tmp1 = node_191858;
		if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		result_191860 = (Tmp2 = HEX5BHEX5D_190322(Tmp1.fields, name_191859), Tmp2)[0][Tmp2[1]];
	framePtr = F.prev;

	return result_191860;

}

function get_str_181688(n_181690, default_181691) {
			var Tmp1;
			var Tmp2;

	var result_181692 = null;

	var F={procname:"json.getStr",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if ((n_181690 == null)) Tmp1 = true; else {				Tmp1 = !((n_181690.kind == 4));			}		if (Tmp1) {
		F.line = 220;
		result_181692 = nimCopy(null, default_181691, NTI138);
		break BeforeRet;
		}
		else {
			F.line = 221;
			var Tmp2 = n_181690;
			if (ConstSet6[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			result_181692 = nimCopy(null, Tmp2.str, NTI138);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_181692;

}

function get_or_default_193876(t_193881, key_193882) {
	var result_193883 = null;

	var F={procname:"getOrDefault.getOrDefault",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 133;
		var hcHEX60gensym193884_193886 = [0];
		F.line = 134;
		var indexHEX60gensym193885_193895 = raw_get_190333(t_193881, key_193882, hcHEX60gensym193884_193886, 0);
		if ((0 <= indexHEX60gensym193885_193895)) {
		F.line = 135;
		result_193883 = t_193881.data[chckIndx(indexHEX60gensym193885_193895, 0, (t_193881.data != null ? t_193881.data.length : 0)+0-1)-0].Field3;
		}
		
	framePtr = F.prev;

	return result_193883;

}

function get_or_default_194133(node_194135, key_194136) {
			var Tmp1;
		var Tmp2;

	var result_194137 = null;

	var F={procname:"json.getOrDefault",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
			if (!!((node_194135 == null))) Tmp1 = false; else {				Tmp1 = (node_194135.kind == 5);			}		if (Tmp1) {
		F.line = 540;
		var Tmp2 = node_194135;
		if (ConstSet7[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		result_194137 = get_or_default_193876(Tmp2.fields, key_194136);
		}
		
	framePtr = F.prev;

	return result_194137;

}

function get_float_181796(n_181798, default_181799) {
			var Tmp1;
			var Tmp2;

	var result_181800 = 0.0;

	var F={procname:"json.getFloat",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_181798 == null)) {
		F.line = 245;
		result_181800 = default_181799;
		break BeforeRet;
		}
		
		F.line = 246;
		switch (n_181798.kind) {
		case 3:
			F.line = 247;
			var Tmp1 = n_181798;
			if (ConstSet8[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			result_181800 = Tmp1.fnum;
			break BeforeRet;
			break;
		case 2:
			F.line = 248;
			var Tmp2 = n_181798;
			if (ConstSet9[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			result_181800 = Tmp2.num;
			break BeforeRet;
			break;
		default: 
			F.line = 249;
			result_181800 = default_181799;
			break BeforeRet;
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_181800;

}

function text_222164(s_222166) {
	var result_222167 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 282;
		result_222167 = {kind: 0, text: toJSStr(s_222166), index: -1, m_type: NTI219714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_222167;

}

function parse_saturated_natural_73231(s_73233, b_73235, b_73235_Idx, start_73236) {
			var Tmp1;
					var Tmp4;

	var result_73238 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 481;
		var i_73239 = start_73236;
		if (((i_73239 < (s_73233 != null ? s_73233.length : 0)) && (s_73233[chckIndx(i_73239, 0, (s_73233 != null ? s_73233.length : 0)+0-1)-0] == 43))) {
		F.line = 482;
		i_73239 = addInt(i_73239, 1);
		}
		
			if (!(i_73239 < (s_73233 != null ? s_73233.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet14[s_73233[chckIndx(i_73239, 0, (s_73233 != null ? s_73233.length : 0)+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 484;
		b_73235[b_73235_Idx] = 0;
		L2: do {
			F.line = 485;
				L3: while (true) {
					if (!(i_73239 < (s_73233 != null ? s_73233.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet15[s_73233[chckIndx(i_73239, 0, (s_73233 != null ? s_73233.length : 0)+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 486;
					var c_73268 = subInt(s_73233[chckIndx(i_73239, 0, (s_73233 != null ? s_73233.length : 0)+0-1)-0], 48);
					if ((b_73235[b_73235_Idx] <= divInt(subInt(2147483647, c_73268), 10))) {
					F.line = 488;
					b_73235[b_73235_Idx] = addInt(mulInt(b_73235[b_73235_Idx], 10), c_73268);
					}
					else {
						F.line = 490;
						b_73235[b_73235_Idx] = 2147483647;
					}
					
					F.line = 491;
					i_73239 = addInt(i_73239, 1);
					L5: do {
						F.line = 492;
							L6: while (true) {
							if (!((i_73239 < (s_73233 != null ? s_73233.length : 0)) && (s_73233[chckIndx(i_73239, 0, (s_73233 != null ? s_73233.length : 0)+0-1)-0] == 95))) break L6;
								F.line = 492;
								i_73239 = addInt(i_73239, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 493;
		result_73238 = subInt(i_73239, start_73236);
		}
		
	framePtr = F.prev;

	return result_73238;

}

function HEX5BHEX5D_111304(s_111308, x_111310) {
	var result_111311 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3977;
		var a_111401 = x_111310.a;
		F.line = 3978;
		var l_111601 = addInt(subInt(subInt((s_111308 != null ? s_111308.length : 0), x_111310.b), a_111401), 1);
		F.line = 3979;
		result_111311 = nimCopy(null, mnewString(chckRange(l_111601, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 3980;
			var i_111609 = 0;
			F.line = 2739;
			var i_257717 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_257717 < l_111601)) break L3;
						F.line = 3980;
						i_111609 = i_257717;
						F.line = 3980;
						result_111311[chckIndx(i_111609, 0, (result_111311 != null ? result_111311.length : 0)+0-1)-0] = s_111308[chckIndx(addInt(i_111609, a_111401), 0, (s_111308 != null ? s_111308.length : 0)+0-1)-0];
						F.line = 2742;
						i_257717 = addInt(i_257717, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_111311;

}

function HEX2EHEX2E_111239(a_111243, b_111244) {
	var result_111250 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 502;
		nimCopy(result_111250, {a: a_111243, b: b_111244}, NTI111247);
	framePtr = F.prev;

	return result_111250;

}

function parse_standard_format_specifier_206324(s_206326, start_206327, ignore_unknown_suffix_206329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_206330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 379;
		result_206330.fill = 32;
		F.line = 380;
		result_206330.align = 0;
		F.line = 381;
		result_206330.sign = 45;
		F.line = 382;
		var i_206333 = start_206327;
		if (((addInt(i_206333, 1) < (s_206326 != null ? s_206326.length : 0)) && (ConstSet10[s_206326[chckIndx(addInt(i_206333, 1), 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0]] != undefined))) {
		F.line = 384;
		result_206330.fill = s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0];
		F.line = 385;
		result_206330.align = s_206326[chckIndx(addInt(i_206333, 1), 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0];
		F.line = 386;
		i_206333 = addInt(i_206333, 2);
		}
		else {
		if (((i_206333 < (s_206326 != null ? s_206326.length : 0)) && (ConstSet11[s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0]] != undefined))) {
		F.line = 388;
		result_206330.align = s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0];
		F.line = 389;
		i_206333 = addInt(i_206333, 1);
		}
		}
		if (((i_206333 < (s_206326 != null ? s_206326.length : 0)) && (ConstSet12[s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0]] != undefined))) {
		F.line = 392;
		result_206330.sign = s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0];
		F.line = 393;
		i_206333 = addInt(i_206333, 1);
		}
		
		if (((i_206333 < (s_206326 != null ? s_206326.length : 0)) && (s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0] == 35))) {
		F.line = 396;
		result_206330.alternateForm = true;
		F.line = 397;
		i_206333 = addInt(i_206333, 1);
		}
		
			if (!((addInt(i_206333, 1) < (s_206326 != null ? s_206326.length : 0)) && (s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet13[s_206326[chckIndx(addInt(i_206333, 1), 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 400;
		result_206330.padWithZero = true;
		F.line = 401;
		i_206333 = addInt(i_206333, 1);
		}
		
		F.line = 403;
		var parsed_length_206391 = parse_saturated_natural_73231(s_206326, result_206330, "minimumWidth", i_206333);
		F.line = 404;
		i_206333 = addInt(i_206333, parsed_length_206391);
		if (((i_206333 < (s_206326 != null ? s_206326.length : 0)) && (s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0] == 46))) {
		F.line = 406;
		i_206333 = addInt(i_206333, 1);
		F.line = 407;
		var parsed_length_b_206405 = parse_saturated_natural_73231(s_206326, result_206330, "precision", i_206333);
		F.line = 408;
		i_206333 = addInt(i_206333, parsed_length_b_206405);
		}
		else {
			F.line = 410;
			result_206330.precision = -1;
		}
		
			if (!(i_206333 < (s_206326 != null ? s_206326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet16[s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 413;
		result_206330.typ = s_206326[chckIndx(i_206333, 0, (s_206326 != null ? s_206326.length : 0)+0-1)-0];
		F.line = 414;
		i_206333 = addInt(i_206333, 1);
		}
		
		F.line = 415;
		result_206330.endPosition = i_206333;
			if (!!((i_206333 == (s_206326 != null ? s_206326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_206329);			}		if (Tmp3) {
		F.line = 3478;
		var eHEX60gensym206460_206603 = null;
		F.line = 3481;
		eHEX60gensym206460_206603 = {m_type: NTI3652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 418;
		eHEX60gensym206460_206603.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_111304(s_206326, HEX2EHEX2E_111239(i_206333, 1)) || []), NTI138);
		F.line = 3474;
		eHEX60gensym206460_206603.parent = null;
		F.line = 417;
		raiseException(eHEX60gensym206460_206603, "ValueError");
		}
		
	framePtr = F.prev;

	return result_206330;

}

function mk_digit_206041(v_206043, typ_206044) {
			var Tmp1;

	var result_206045 = null;

	var F={procname:"strformat.mkDigit",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if (!((v_206043 < 26))) {
		F.line = 270;
		failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/strformat.nim(270, 9) `v < 26` "));
		}
		
		if ((v_206043 < 10)) {
		F.line = 272;
		result_206045 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_206043), 0, 255)), NTI138);
		}
		else {
			F.line = 274;
			if ((typ_206044 == 120)) {
			Tmp1 = 97;
			}
			else {
			Tmp1 = 65;
			}
			
			result_206045 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_206043), 10), 0, 255)), NTI138);
		}
		
	framePtr = F.prev;

	return result_206045;

}

function nsuRepeatChar(c_162656, count_162657) {
	var result_162658 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1294;
		result_162658 = nimCopy(null, mnewString(count_162657), NTI138);
		L1: do {
			F.line = 1295;
			var i_162667 = 0;
			F.line = 2699;
			var colontmp__257737 = 0;
			F.line = 1295;
			colontmp__257737 = subInt(count_162657, 1);
			F.line = 2710;
			var res_257738 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_257738 <= colontmp__257737)) break L3;
						F.line = 1295;
						i_162667 = res_257738;
						F.line = 1295;
						result_162658[chckIndx(i_162667, 0, (result_162658 != null ? result_162658.length : 0)+0-1)-0] = c_162656;
						F.line = 2713;
						res_257738 = addInt(res_257738, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_162658;

}

function format_int_257210(n_257213, radix_257214, spec_257215) {
		var Tmp7;

	var result_257216 = null;

	var F={procname:"formatInt.formatInt",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 318;
		var v_257401 = n_257213;
		F.line = 319;
		var negative_257402 = (v_257401 < 0);
		if (negative_257402) {
		F.line = 322;
		v_257401 = mulInt(v_257401, -1);
		}
		
		F.line = 324;
		var xx_257404 = [];
		if (spec_257215.alternateForm) {
		F.line = 326;
		switch (spec_257215.typ) {
		case 88:
			F.line = 327;
			xx_257404 = nimCopy(null, makeNimstrLit("0x"), NTI138);
			break;
		case 120:
			F.line = 328;
			xx_257404 = nimCopy(null, makeNimstrLit("0x"), NTI138);
			break;
		case 98:
			F.line = 329;
			xx_257404 = nimCopy(null, makeNimstrLit("0b"), NTI138);
			break;
		case 111:
			F.line = 330;
			xx_257404 = nimCopy(null, makeNimstrLit("0o"), NTI138);
			break;
		default: 
			break;
		}
		}
		
		if ((v_257401 == 0)) {
		F.line = 334;
		result_257216 = nimCopy(null, makeNimstrLit("0"), NTI138);
		}
		else {
			F.line = 336;
			result_257216 = nimCopy(null, [], NTI138);
			L1: do {
				F.line = 337;
					L2: while (true) {
					if (!(0 < v_257401)) break L2;
						F.line = 338;
						var d_257407 = modInt(v_257401, radix_257214);
						F.line = 339;
						v_257401 = divInt(v_257401, radix_257214);
						F.line = 340;
						if (result_257216 != null) { result_257216 = (result_257216).concat(mk_digit_206041(chckRange(d_257407, -2147483648, 2147483647), spec_257215.typ)); } else { result_257216 = mk_digit_206041(chckRange(d_257407, -2147483648, 2147483647), spec_257215.typ).slice(); };
					}
			} while(false);
			L3: do {
				F.line = 341;
				var idx_257416 = 0;
				F.line = 2737;
				var colontmp__257726 = 0;
				F.line = 341;
				colontmp__257726 = divInt((result_257216 != null ? result_257216.length : 0), 2);
				F.line = 2739;
				var i_257727 = 0;
				L4: do {
					F.line = 2740;
						L5: while (true) {
						if (!(i_257727 < colontmp__257726)) break L5;
							F.line = 341;
							idx_257416 = i_257727;
							F.line = 342;
							var Tmp6 = result_257216[chckIndx(idx_257416, 0, (result_257216 != null ? result_257216.length : 0)+0-1)-0]; result_257216[chckIndx(idx_257416, 0, (result_257216 != null ? result_257216.length : 0)+0-1)-0] = result_257216[chckIndx(subInt(subInt((result_257216 != null ? result_257216.length : 0), idx_257416), 1), 0, (result_257216 != null ? result_257216.length : 0)+0-1)-0]; result_257216[chckIndx(subInt(subInt((result_257216 != null ? result_257216.length : 0), idx_257416), 1), 0, (result_257216 != null ? result_257216.length : 0)+0-1)-0] = Tmp6;							F.line = 2742;
							i_257727 = addInt(i_257727, 1);
						}
				} while(false);
			} while(false);
		}
		
		if (spec_257215.padWithZero) {
		F.line = 344;
		if (negative_257402) Tmp7 = true; else {			Tmp7 = !((spec_257215.sign == 45));		}		var sign_257432 = Tmp7;
		F.line = 345;
		var to_fill_257437 = subInt(subInt(subInt(spec_257215.minimumWidth, (result_257216 != null ? result_257216.length : 0)), (xx_257404 != null ? xx_257404.length : 0)), (sign_257432 ? 1:0));
		if ((0 < to_fill_257437)) {
		F.line = 347;
		result_257216 = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_257437, 0, 2147483647)) || []).concat(result_257216 || []), NTI138);
		}
		
		}
		
		if (negative_257402) {
		F.line = 350;
		result_257216 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_257404 || [],result_257216 || []), NTI138);
		}
		else {
		if (!((spec_257215.sign == 45))) {
		F.line = 352;
		result_257216 = nimCopy(null, [spec_257215.sign].concat(xx_257404 || [],result_257216 || []), NTI138);
		}
		else {
			F.line = 354;
			result_257216 = nimCopy(null, (xx_257404 || []).concat(result_257216 || []), NTI138);
		}
		}
		if ((spec_257215.align == 60)) {
		L8: do {
			F.line = 357;
			var i_257445 = 0;
			F.line = 2737;
			var colontmp__257731 = 0;
			F.line = 2737;
			var colontmp__257732 = 0;
			F.line = 357;
			colontmp__257731 = (result_257216 != null ? result_257216.length : 0);
			F.line = 357;
			colontmp__257732 = spec_257215.minimumWidth;
			F.line = 2739;
			var i_257733 = colontmp__257731;
			L9: do {
				F.line = 2740;
					L10: while (true) {
					if (!(i_257733 < colontmp__257732)) break L10;
						F.line = 357;
						i_257445 = i_257733;
						F.line = 358;
						if (result_257216 != null) { addChar(result_257216, spec_257215.fill); } else { result_257216 = [spec_257215.fill]; };
						F.line = 2742;
						i_257733 = addInt(i_257733, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 360;
			var to_fill_257446 = subInt(spec_257215.minimumWidth, (result_257216 != null ? result_257216.length : 0));
			if ((spec_257215.align == 94)) {
			F.line = 362;
			var half_257447 = divInt(to_fill_257446, 2);
			F.line = 363;
			result_257216 = nimCopy(null, (nsuRepeatChar(spec_257215.fill, chckRange(half_257447, 0, 2147483647)) || []).concat(result_257216 || [],nsuRepeatChar(spec_257215.fill, chckRange(subInt(to_fill_257446, half_257447), 0, 2147483647)) || []), NTI138);
			}
			else {
				if ((0 < to_fill_257446)) {
				F.line = 366;
				result_257216 = nimCopy(null, (nsuRepeatChar(spec_257215.fill, chckRange(to_fill_257446, 0, 2147483647)) || []).concat(result_257216 || []), NTI138);
				}
				
			}
			
		}
		
	framePtr = F.prev;

	return result_257216;

}

function format_value_257154(result_257157, result_257157_Idx, value_257158, specifier_257159) {
	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_257159 != null ? specifier_257159.length : 0) == 0)) {
		F.line = 426;
		if (result_257157[result_257157_Idx] != null) { result_257157[result_257157_Idx] = (result_257157[result_257157_Idx]).concat(cstrToNimstr((value_257158)+"")); } else { result_257157[result_257157_Idx] = cstrToNimstr((value_257158)+"").slice(); };
		F.line = 427;
		break BeforeRet;
		}
		
		F.line = 428;
		var spec_257160 = parse_standard_format_specifier_206324(specifier_257159, 0, false);
		F.line = 429;
		var radix_257162 = 10;
		F.line = 430;
		switch (spec_257160.typ) {
		case 120:
		case 88:
			F.line = 431;
			radix_257162 = 16;
			break;
		case 100:
		case 0:
			break;
		case 98:
			F.line = 433;
			radix_257162 = 2;
			break;
		case 111:
			F.line = 434;
			radix_257162 = 8;
			break;
		default: 
			F.line = 3478;
			var eHEX60gensym257164_257203 = null;
			F.line = 3481;
			eHEX60gensym257164_257203 = {m_type: NTI3652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 438;
			eHEX60gensym257164_257203.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_257160.typ]), NTI138);
			F.line = 3474;
			eHEX60gensym257164_257203.parent = null;
			F.line = 436;
			raiseException(eHEX60gensym257164_257203, "ValueError");
			break;
		}
		F.line = 439;
		if (result_257157[result_257157_Idx] != null) { result_257157[result_257157_Idx] = (result_257157[result_257157_Idx]).concat(format_int_257210(value_257158, radix_257162, spec_257160)); } else { result_257157[result_257157_Idx] = format_int_257210(value_257158, radix_257162, spec_257160).slice(); };
	} while (false);
	framePtr = F.prev;

	
}

function load_planets_257117(http_status_257119, resp_257120) {
				var Tmp3;

	var F={procname:"planets.loadPlanets",prev:framePtr,filename:"planets.nim",line:0};
	framePtr = F;
		F.line = 12;
		var planets_j_257121 = parse_json_201457(cstrToNimstr(resp_257120));
		L1: do {
			F.line = 13;
			var p_257122 = null;
			F.line = 756;
			var colontmp__257665 = null;
			F.line = 13;
			colontmp__257665 = HEX5BHEX5D_191856(planets_j_257121, makeNimstrLit("planets"));
			if (!((colontmp__257665.kind == 6))) {
			F.line = 758;
			failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/pure/json.nim(758, 10) `node.kind == JArray` "));
			}
			
			L2: do {
				F.line = 759;
				var i_257673 = null;
				F.line = 182;
				var colontmp__257674 = null;
				F.line = 759;
				var Tmp3 = colontmp__257665;
				if (ConstSet5[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
				colontmp__257674 = Tmp3.elems;
				F.line = 184;
				var i_257675 = 0;
				F.line = 185;
				var l_257676 = (colontmp__257674 != null ? colontmp__257674.length : 0);
				L4: do {
					F.line = 186;
						L5: while (true) {
						if (!(i_257675 < l_257676)) break L5;
							F.line = 759;
							i_257673 = colontmp__257674[chckIndx(i_257675, 0, (colontmp__257674 != null ? colontmp__257674.length : 0)+0-1)-0];
							F.line = 13;
							p_257122 = i_257673;
							F.line = 15;
							var name_257126 = get_str_181688(get_or_default_194133(p_257122, makeNimstrLit("name")), []);
							F.line = 16;
							var period_257130 = get_float_181796(get_or_default_194133(p_257122, makeNimstrLit("period")), 0.0);
							if ((0.0 < period_257130)) {
							F.line = 18;
							if (planets_257059[0] != null) { planets_257059[0].push({Field0: nimCopy(null, name_257126, NTI138), Field1: period_257130}); } else { planets_257059[0] = [{Field0: nimCopy(null, name_257126, NTI138), Field1: period_257130}]; };
							}
							
							F.line = 188;
							i_257675 = addInt(i_257675, 1);
							if (!(((colontmp__257674 != null ? colontmp__257674.length : 0) == l_257676))) {
							F.line = 189;
							failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 19;
		F.line = 20;
		var fmt_res_257144 = [mnewString(0)];
		F.line = 20;
		if (fmt_res_257144[0] != null) { fmt_res_257144[0] = (fmt_res_257144[0]).concat(makeNimstrLit("Added ")); } else { fmt_res_257144[0] = makeNimstrLit("Added "); };
		F.line = 20;
		format_value_257154(fmt_res_257144, 0, (planets_257059[0] != null ? planets_257059[0].length : 0), []);
		F.line = 20;
		if (fmt_res_257144[0] != null) { fmt_res_257144[0] = (fmt_res_257144[0]).concat(makeNimstrLit(" planets")); } else { fmt_res_257144[0] = makeNimstrLit(" planets"); };
		res_257054[0] = text_222164(fmt_res_257144[0]);
	framePtr = F.prev;

	
}
ajax_get_251462("/img/planets.json", [], load_planets_257117, true, kxi_231324[0]);

function new_seq_240013(len_240016) {
	var result_240018 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_240018 = new Array(len_240016); for (var i=0;i<len_240016;++i) {result_240018[i]={k: 0, parent: null, current: null, newNode: null, oldNode: null};}	framePtr = F.prev;

	return result_240018;

}

function new_seq_240050(len_240053) {
	var result_240055 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_240055 = new Array(len_240053); for (var i=0;i<len_240053;++i) {result_240055[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_240055;

}

function init_239846(ev_239848) {

		function HEX3Aanonymous_239849() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 690;
				dodraw_238462(kxi_231324[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 690;
		kxi_231324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_239849);
	framePtr = F.prev;

	
}

function set_renderer_239878(renderer_239883, root_239884, client_post_render_callback_239888) {

		function HEX3Aanonymous_240113() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 713;
				redraw_239614(kxi_231324[0]);
			framePtr = F.prev;

			
		}

	var result_239889 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_239884) == null)) {
		F.line = 699;
		var msg_239895 = (("Could not find a <div> with id=" + root_239884) + ". Karax needs it as its rendering target.");
		F.line = 3478;
		var eHEX60gensym239898_240003 = null;
		F.line = 3481;
		eHEX60gensym239898_240003 = {m_type: NTI3626, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 701;
		eHEX60gensym239898_240003.message = nimCopy(null, cstrToNimstr(msg_239895), NTI138);
		F.line = 3474;
		eHEX60gensym239898_240003.parent = null;
		F.line = 701;
		raiseException(eHEX60gensym239898_240003, "Exception");
		}
		
		F.line = 703;
		result_239889 = {rootId: root_239884, renderer: renderer_239883, postRenderCallback: client_post_render_callback_239888, patches: new_seq_240013(60), patchesV: new_seq_240050(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 711;
		kxi_231324[0] = result_239889;
		F.line = 712;
		window.onload = init_239846;
		F.line = 713;
		window.onhashchange = HEX3Aanonymous_240113;
	framePtr = F.prev;

	return result_239889;

}

function set_renderer_240201(renderer_240205, root_240206, client_post_render_callback_240209) {

		function wrap_renderer_240211(data_240213) {
			var result_240214 = null;

			var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 718;
				result_240214 = renderer_240205();
			framePtr = F.prev;

			return result_240214;

		}

		function wrap_post_render_240228(data_240230) {
			var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				if (!((client_post_render_callback_240209 == null))) {
				F.line = 720;
				client_post_render_callback_240209();
				}
				
			framePtr = F.prev;

			
		}

	var result_240210 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 717;
		result_240210 = set_renderer_239878(wrap_renderer_240211, root_240206, wrap_post_render_240228);
	framePtr = F.prev;

	return result_240210;

}

function add_event_listener_222521(n_222523, event_222524, handler_222525) {
	var F={procname:"vdom.addEventListener",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 306;
		if (n_222523.events != null) { n_222523.events.push({Field0: event_222524, Field1: handler_222525, Field2: null}); } else { n_222523.events = [{Field0: event_222524, Field1: handler_222525, Field2: null}]; };
	framePtr = F.prev;

	
}

function add_event_handler_240348(n_240350, k_240351, action_240352, kxi_240353) {

		function wrapper_240354(ev_240356, n_240357) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 746;
				action_240352(ev_240356, n_240357);
				if (!(kxi_240353.surpressRedraws)) {
				F.line = 747;
				redraw_239614(kxi_240353);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 748;
		add_event_listener_222521(n_240350, k_240351, wrapper_240354);
	framePtr = F.prev;

	
}

function add_event_handler_240384(n_240386, k_240387, action_240390, kxi_240391) {

		function wrapper_240392(ev_240394, n_240395) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 758;
				action_240390();
				if (!(kxi_240391.surpressRedraws)) {
				F.line = 759;
				redraw_239614(kxi_240391);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 760;
		add_event_listener_222521(n_240386, k_240387, wrapper_240392);
	framePtr = F.prev;

	
}

function abs_12649(x_12651) {
		var Tmp1;

	var result_12652 = 0.0;

		if ((x_12651 < 0.0)) {
		Tmp1 = -(x_12651);
		}
		else {
		Tmp1 = x_12651;
		}
		
		result_12652 = Tmp1;

	return result_12652;

}

function set_attr_220568(n_220570, key_220571, val_220572) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_220570.attrs != null ? n_220570.attrs.length : 0) == 0)) {
		F.line = 227;
		n_220570.attrs = nimCopy(null, [key_220571, val_220572], NTI220588);
		}
		else {
			L1: do {
				F.line = 229;
				var i_220601 = 0;
				F.line = 2672;
				var colontmp__258322 = 0;
				F.line = 229;
				colontmp__258322 = subInt((n_220570.attrs != null ? n_220570.attrs.length : 0), 2);
				F.line = 2689;
				var res_258323 = 0;
				L2: do {
					F.line = 2690;
						L3: while (true) {
						if (!(res_258323 <= colontmp__258322)) break L3;
							F.line = 229;
							i_220601 = res_258323;
							if ((n_220570.attrs[chckIndx(i_220601, 0, (n_220570.attrs != null ? n_220570.attrs.length : 0)+0-1)-0] == key_220571)) {
							F.line = 231;
							n_220570.attrs[chckIndx(addInt(i_220601, 1), 0, (n_220570.attrs != null ? n_220570.attrs.length : 0)+0-1)-0] = val_220572;
							F.line = 232;
							break BeforeRet;
							}
							
							F.line = 2692;
							res_258323 = addInt(res_258323, 2);
						}
				} while(false);
			} while(false);
			F.line = 233;
			if (n_220570.attrs != null) { n_220570.attrs.push(key_220571); } else { n_220570.attrs = [key_220571]; };
			F.line = 234;
			if (n_220570.attrs != null) { n_220570.attrs.push(val_220572); } else { n_220570.attrs = [val_220572]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function nsuToHex(x_160250, len_160251) {
	var result_160252 = null;

	var F={procname:"strutils.toHex",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 949;
		var n_160254 = x_160250;
		F.line = 950;
		result_160252 = nimCopy(null, mnewString(len_160251), NTI138);
		L1: do {
			F.line = 951;
			var j_160261 = 0;
			F.line = 2639;
			var colontmp__258333 = 0;
			F.line = 951;
			colontmp__258333 = subInt(len_160251, 1);
			F.line = 2661;
			var res_258334 = colontmp__258333;
			L2: do {
				F.line = 2662;
					L3: while (true) {
					if (!(0 <= res_258334)) break L3;
						F.line = 951;
						j_160261 = res_258334;
						F.line = 952;
						result_160252[chckIndx(j_160261, 0, (result_160252 != null ? result_160252.length : 0)+0-1)-0] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_160254 & 15), 0, (makeNimstrLit("0123456789ABCDEF") != null ? makeNimstrLit("0123456789ABCDEF").length : 0)+0-1)-0];
						F.line = 953;
						n_160254 = (n_160254 >> 4);
						if (((n_160254 == 0) && (x_160250 < 0))) {
						F.line = 955;
						n_160254 = -1;
						}
						
						F.line = 2664;
						res_258334 = subInt(res_258334, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_160252;

}

function encode_url_252041(s_252043, use_plus_252044) {
		var Tmp1;

	var result_252045 = null;

	var F={procname:"uri.encodeUrl",prev:framePtr,filename:"uri.nim",line:0};
	framePtr = F;
		F.line = 67;
		result_252045 = nimCopy(null, mnewString(0), NTI138);
		F.line = 68;
		if (use_plus_252044) {
		Tmp1 = makeNimstrLit("+");
		}
		else {
		Tmp1 = makeNimstrLit("%20");
		}
		
		var from_space_252053 = nimCopy(null, Tmp1, NTI138);
		L2: do {
			F.line = 69;
			var c_252055 = 0;
			F.line = 202;
			var i_258329 = 0;
			F.line = 203;
			var l_258330 = (s_252043 != null ? s_252043.length : 0);
			L3: do {
				F.line = 204;
					L4: while (true) {
					if (!(i_258329 < l_258330)) break L4;
						F.line = 69;
						c_252055 = s_252043[chckIndx(i_258329, 0, (s_252043 != null ? s_252043.length : 0)+0-1)-0];
						F.line = 70;
						switch (c_252055) {
						case 97:
						case 98:
						case 99:
						case 100:
						case 101:
						case 102:
						case 103:
						case 104:
						case 105:
						case 106:
						case 107:
						case 108:
						case 109:
						case 110:
						case 111:
						case 112:
						case 113:
						case 114:
						case 115:
						case 116:
						case 117:
						case 118:
						case 119:
						case 120:
						case 121:
						case 122:
						case 65:
						case 66:
						case 67:
						case 68:
						case 69:
						case 70:
						case 71:
						case 72:
						case 73:
						case 74:
						case 75:
						case 76:
						case 77:
						case 78:
						case 79:
						case 80:
						case 81:
						case 82:
						case 83:
						case 84:
						case 85:
						case 86:
						case 87:
						case 88:
						case 89:
						case 90:
						case 48:
						case 49:
						case 50:
						case 51:
						case 52:
						case 53:
						case 54:
						case 55:
						case 56:
						case 57:
						case 45:
						case 46:
						case 95:
						case 126:
							F.line = 72;
							if (result_252045 != null) { addChar(result_252045, c_252055); } else { result_252045 = [c_252055]; };
							break;
						case 32:
							F.line = 73;
							if (result_252045 != null) { result_252045 = (result_252045).concat(from_space_252053); } else { result_252045 = from_space_252053.slice(); };
							break;
						default: 
							F.line = 75;
							if (result_252045 != null) { addChar(result_252045, 37); } else { result_252045 = [37]; };
							F.line = 76;
							if (result_252045 != null) { result_252045 = (result_252045).concat(nsuToHex(c_252055, 2)); } else { result_252045 = nsuToHex(c_252055, 2).slice(); };
							break;
						}
						F.line = 206;
						i_258329 = addInt(i_258329, 1);
						if (!(((s_252043 != null ? s_252043.length : 0) == l_258330))) {
						F.line = 207;
						failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/system/iterators.nim(207, 11) `len(a) == L` the length of the string changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_252045;

}

function nsuformatBiggestFloat(f_166221, format_166222, precision_166228, decimal_sep_166229) {
	var result_166230 = null;

	var F={procname:"strutils.formatBiggestFloat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2322;
		var precision_166401 = precision_166228;
		if ((precision_166401 == -1)) {
		F.line = 2325;
		precision_166401 = 6;
		}
		
		F.line = 2326;
		var res_166403 = null;
		F.line = 2327;
		switch (format_166222) {
		case 0:
			F.line = 2329;
			res_166403 = f_166221.toString();
			break;
		case 1:
			F.line = 2331;
			res_166403 = f_166221.toFixed(precision_166401);
			break;
		case 2:
			F.line = 2333;
			res_166403 = f_166221.toExponential(precision_166401);
			break;
		}
		F.line = 2334;
		result_166230 = nimCopy(null, cstrToNimstr(res_166403), NTI138);
		if (((1.0000000000000000e+00 / f_166221) == -Infinity)) {
		F.line = 2337;
		result_166230 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_166403) || []), NTI138);
		}
		
		L1: do {
			F.line = 2338;
			var i_166411 = 0;
			F.line = 2737;
			var colontmp__258341 = 0;
			F.line = 2338;
			colontmp__258341 = (result_166230 != null ? result_166230.length : 0);
			F.line = 2739;
			var i_258342 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_258342 < colontmp__258341)) break L3;
						F.line = 2338;
						i_166411 = i_258342;
						if ((ConstSet17[result_166230[chckIndx(i_166411, 0, (result_166230 != null ? result_166230.length : 0)+0-1)-0]] != undefined)) {
						F.line = 2341;
						result_166230[chckIndx(i_166411, 0, (result_166230 != null ? result_166230.length : 0)+0-1)-0] = decimal_sep_166229;
						}
						
						F.line = 2742;
						i_258342 = addInt(i_258342, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_166230;

}

function insert_28601(x_28604, x_28604_Idx, item_28605, i_28606) {
	var F={procname:"system.insert",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4255;
		var xl_28607 = (x_28604[x_28604_Idx] != null ? x_28604[x_28604_Idx].length : 0);
		F.line = 4256;
		(x_28604[x_28604_Idx] == null ? x_28604[x_28604_Idx] = mnewString(chckRange(addInt(xl_28607, (item_28605 != null ? item_28605.length : 0)), 0, 2147483647)) : x_28604[x_28604_Idx].length = chckRange(addInt(xl_28607, (item_28605 != null ? item_28605.length : 0)), 0, 2147483647));
		F.line = 4257;
		var j_28608 = subInt(xl_28607, 1);
		L1: do {
			F.line = 4258;
				L2: while (true) {
				if (!(i_28606 <= j_28608)) break L2;
					F.line = 4259;
					x_28604[x_28604_Idx][chckIndx(addInt(j_28608, (item_28605 != null ? item_28605.length : 0)), 0, (x_28604[x_28604_Idx] != null ? x_28604[x_28604_Idx].length : 0)+0-1)-0] = x_28604[x_28604_Idx][chckIndx(j_28608, 0, (x_28604[x_28604_Idx] != null ? x_28604[x_28604_Idx].length : 0)+0-1)-0];
					F.line = 4260;
					j_28608 = subInt(j_28608, 1);
				}
		} while(false);
		F.line = 4261;
		j_28608 = 0;
		L3: do {
			F.line = 4262;
				L4: while (true) {
				if (!(j_28608 < (item_28605 != null ? item_28605.length : 0))) break L4;
					F.line = 4263;
					x_28604[x_28604_Idx][chckIndx(addInt(j_28608, i_28606), 0, (x_28604[x_28604_Idx] != null ? x_28604[x_28604_Idx].length : 0)+0-1)-0] = item_28605[chckIndx(j_28608, 0, (item_28605 != null ? item_28605.length : 0)+0-1)-0];
					F.line = 4264;
					j_28608 = addInt(j_28608, 1);
				}
		} while(false);
	framePtr = F.prev;

	
}

function validate_utf8_78829(s_78831) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_78832 = 0;

	var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 175;
		var i_78834 = 0;
		F.line = 176;
		var l_78835 = (s_78831 != null ? s_78831.length : 0);
		L1: do {
			F.line = 177;
				L2: while (true) {
				if (!(i_78834 < l_78835)) break L2;
					if ((s_78831[chckIndx(i_78834, 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] <= 127)) {
					F.line = 179;
					i_78834 = addInt(i_78834, 1);
					}
					else {
					if ((((s_78831[chckIndx(i_78834, 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_78831[chckIndx(i_78834, 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] < 194)) {
					F.line = 181;
					result_78832 = i_78834;
					break BeforeRet;
					}
					
						if (!(addInt(i_78834, 1) < l_78835)) Tmp3 = false; else {							Tmp3 = (((s_78831[chckIndx(addInt(i_78834, 1), 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					F.line = 182;
					i_78834 = addInt(i_78834, 2);
					}
					else {
						F.line = 183;
						result_78832 = i_78834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_78831[chckIndx(i_78834, 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_78834, 2) < l_78835)) Tmp5 = false; else {							Tmp5 = (((s_78831[chckIndx(addInt(i_78834, 1), 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_78831[chckIndx(addInt(i_78834, 2), 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					F.line = 186;
					i_78834 = addInt(i_78834, 3);
					}
					else {
						F.line = 187;
						result_78832 = i_78834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_78831[chckIndx(i_78834, 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_78834, 3) < l_78835)) Tmp8 = false; else {							Tmp8 = (((s_78831[chckIndx(addInt(i_78834, 1), 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_78831[chckIndx(addInt(i_78834, 2), 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_78831[chckIndx(addInt(i_78834, 3), 0, (s_78831 != null ? s_78831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					F.line = 192;
					i_78834 = addInt(i_78834, 4);
					}
					else {
						F.line = 193;
						result_78832 = i_78834;
						break BeforeRet;
					}
					
					}
					else {
						F.line = 195;
						result_78832 = i_78834;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		F.line = 196;
		result_78832 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78832;

}

function nucruneLen(s_75829) {
	var result_75830 = 0;

	var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		F.line = 44;
		var i_75832 = 0;
		L1: do {
			F.line = 45;
				L2: while (true) {
				if (!(i_75832 < (s_75829 != null ? s_75829.length : 0))) break L2;
					if ((s_75829[chckIndx(i_75832, 0, (s_75829 != null ? s_75829.length : 0)+0-1)-0] <= 127)) {
					F.line = 46;
					i_75832 = addInt(i_75832, 1);
					}
					else {
					if ((((s_75829[chckIndx(i_75832, 0, (s_75829 != null ? s_75829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
					F.line = 47;
					i_75832 = addInt(i_75832, 2);
					}
					else {
					if ((((s_75829[chckIndx(i_75832, 0, (s_75829 != null ? s_75829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
					F.line = 48;
					i_75832 = addInt(i_75832, 3);
					}
					else {
					if ((((s_75829[chckIndx(i_75832, 0, (s_75829 != null ? s_75829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
					F.line = 49;
					i_75832 = addInt(i_75832, 4);
					}
					else {
					if ((((s_75829[chckIndx(i_75832, 0, (s_75829 != null ? s_75829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
					F.line = 50;
					i_75832 = addInt(i_75832, 5);
					}
					else {
					if ((((s_75829[chckIndx(i_75832, 0, (s_75829 != null ? s_75829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
					F.line = 51;
					i_75832 = addInt(i_75832, 6);
					}
					else {
						F.line = 52;
					i_75832 = addInt(i_75832, 1);
					}
					}}}}}
					F.line = 53;
					result_75830 = addInt(result_75830, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_75830;

}

function align_string_206223(s_206225, minimum_width_206226, align_206227, fill_206228) {
			var Tmp1;

	var result_206229 = null;

	var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if ((minimum_width_206226 == 0)) {
		F.line = 282;
		result_206229 = nimCopy(null, s_206225, NTI138);
		}
		else {
			F.line = 284;
			if ((validate_utf8_78829(s_206225) == -1)) {
			Tmp1 = nucruneLen(s_206225);
			}
			else {
			Tmp1 = (s_206225 != null ? s_206225.length : 0);
			}
			
			var s_rune_len_206231 = Tmp1;
			F.line = 285;
			var to_fill_206232 = subInt(minimum_width_206226, s_rune_len_206231);
			if ((to_fill_206232 <= 0)) {
			F.line = 287;
			result_206229 = nimCopy(null, s_206225, NTI138);
			}
			else {
			if (((align_206227 == 60) || (align_206227 == 0))) {
			F.line = 289;
			result_206229 = nimCopy(null, (s_206225 || []).concat(nsuRepeatChar(fill_206228, chckRange(to_fill_206232, 0, 2147483647)) || []), NTI138);
			}
			else {
			if ((align_206227 == 94)) {
			F.line = 291;
			var half_206233 = divInt(to_fill_206232, 2);
			F.line = 292;
			result_206229 = nimCopy(null, (nsuRepeatChar(fill_206228, chckRange(half_206233, 0, 2147483647)) || []).concat(s_206225 || [],nsuRepeatChar(fill_206228, chckRange(subInt(to_fill_206232, half_206233), 0, 2147483647)) || []), NTI138);
			}
			else {
				F.line = 294;
				result_206229 = nimCopy(null, (nsuRepeatChar(fill_206228, chckRange(to_fill_206232, 0, 2147483647)) || []).concat(s_206225 || []), NTI138);
			}
			}}
		}
		
	framePtr = F.prev;

	return result_206229;

}

function nsuToUpperAsciiChar(c_158463) {
	var result_158464 = 0;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet19[c_158463] != undefined)) {
		F.line = 261;
		result_158464 = chckRange(subInt(c_158463, 32), 0, 255);
		}
		else {
			F.line = 263;
			result_158464 = c_158463;
		}
		
	framePtr = F.prev;

	return result_158464;

}

function nsuToUpperAsciiStr(s_158502) {
	var result_158503 = null;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 227;
		result_158503 = nimCopy(null, mnewString(chckRange((s_158502 != null ? s_158502.length : 0), 0, 2147483647)), NTI138);
		L1: do {
			F.line = 228;
			var iHEX60gensym158504_158513 = 0;
			F.line = 2699;
			var colontmp__219671 = 0;
			F.line = 228;
			colontmp__219671 = subInt((s_158502 != null ? s_158502.length : 0), 1);
			F.line = 2710;
			var res_219672 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_219672 <= colontmp__219671)) break L3;
						F.line = 277;
						iHEX60gensym158504_158513 = res_219672;
						F.line = 229;
						result_158503[chckIndx(iHEX60gensym158504_158513, 0, (result_158503 != null ? result_158503.length : 0)+0-1)-0] = nsuToUpperAsciiChar(s_158502[chckIndx(iHEX60gensym158504_158513, 0, (s_158502 != null ? s_158502.length : 0)+0-1)-0]);
						F.line = 2713;
						res_219672 = addInt(res_219672, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_158503;

}

function format_value_257830(result_257833, result_257833_Idx, value_257834, specifier_257835) {
		var Tmp1;

	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_257835 != null ? specifier_257835.length : 0) == 0)) {
		F.line = 446;
		if (result_257833[result_257833_Idx] != null) { result_257833[result_257833_Idx] = (result_257833[result_257833_Idx]).concat(cstrToNimstr((value_257834)+"")); } else { result_257833[result_257833_Idx] = cstrToNimstr((value_257834)+"").slice(); };
		F.line = 447;
		break BeforeRet;
		}
		
		F.line = 448;
		var spec_257836 = parse_standard_format_specifier_206324(specifier_257835, 0, false);
		F.line = 450;
		var fmode_257837 = 0;
		F.line = 451;
		switch (spec_257836.typ) {
		case 101:
		case 69:
			F.line = 453;
			fmode_257837 = 2;
			break;
		case 102:
		case 70:
			F.line = 455;
			fmode_257837 = 1;
			break;
		case 103:
		case 71:
			F.line = 457;
			fmode_257837 = 0;
			break;
		case 0:
			break;
		default: 
			F.line = 3478;
			var eHEX60gensym257839_258003 = null;
			F.line = 3481;
			eHEX60gensym257839_258003 = {m_type: NTI3652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 462;
			eHEX60gensym257839_258003.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_257836.typ]), NTI138);
			F.line = 3474;
			eHEX60gensym257839_258003.parent = null;
			F.line = 460;
			raiseException(eHEX60gensym257839_258003, "ValueError");
			break;
		}
		F.line = 464;
		var f_258010 = [nsuformatBiggestFloat(value_257834, fmode_257837, chckRange(spec_257836.precision, -1, 32), 46)];
		F.line = 465;
		var sign_258011 = false;
		if ((0.0 <= value_257834)) {
		if (!((spec_257836.sign == 45))) {
		F.line = 468;
		sign_258011 = true;
		if ((value_257834 == 0.0)) {
		if (((1.0000000000000000e+00 / value_257834) == Infinity)) {
		F.line = 472;
		insert_28601(f_258010, 0, nimCharToStr(spec_257836.sign), 0);
		}
		
		}
		else {
			F.line = 474;
		insert_28601(f_258010, 0, nimCharToStr(spec_257836.sign), 0);
		}
		
		}
		
		}
		else {
			F.line = 476;
			sign_258011 = true;
		}
		
		if (spec_257836.padWithZero) {
		F.line = 479;
		var sign_str_258014 = [];
		if (sign_258011) {
		F.line = 481;
		sign_str_258014 = nimCopy(null, nimCharToStr(f_258010[0][chckIndx(0, 0, (f_258010[0] != null ? f_258010[0].length : 0)+0-1)-0]), NTI138);
		F.line = 482;
		f_258010[0] = nimCopy(null, HEX5BHEX5D_111304(f_258010[0], HEX2EHEX2E_111239(1, 1)), NTI138);
		}
		
		F.line = 484;
		var to_fill_258057 = subInt(subInt(spec_257836.minimumWidth, (f_258010[0] != null ? f_258010[0].length : 0)), (sign_258011 ? 1:0));
		if ((0 < to_fill_258057)) {
		F.line = 486;
		f_258010[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_258057, 0, 2147483647)) || []).concat(f_258010[0] || []), NTI138);
		}
		
		if (sign_258011) {
		F.line = 488;
		f_258010[0] = nimCopy(null, (sign_str_258014 || []).concat(f_258010[0] || []), NTI138);
		}
		
		}
		
		F.line = 491;
		if ((spec_257836.align == 0)) {
		Tmp1 = 62;
		}
		else {
		Tmp1 = spec_257836.align;
		}
		
		var align_258060 = Tmp1;
		F.line = 492;
		var res_258061 = align_string_206223(f_258010[0], spec_257836.minimumWidth, align_258060, spec_257836.fill);
		if ((ConstSet18[spec_257836.typ] != undefined)) {
		F.line = 494;
		if (result_257833[result_257833_Idx] != null) { result_257833[result_257833_Idx] = (result_257833[result_257833_Idx]).concat(nsuToUpperAsciiStr(res_258061)); } else { result_257833[result_257833_Idx] = nsuToUpperAsciiStr(res_258061).slice(); };
		}
		else {
			F.line = 496;
		if (result_257833[result_257833_Idx] != null) { result_257833[result_257833_Idx] = (result_257833[result_257833_Idx]).concat(res_258061); } else { result_257833[result_257833_Idx] = res_258061.slice(); };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function find_planet_257743(earth_257745, desired_257746) {
	var result_257747 = null;

	var F={procname:"planets.findPlanet",prev:framePtr,filename:"planets.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 26;
		var desired_ratio_257748 = (earth_257745 / desired_257746);
		F.line = 28;
		var best_name_257749 = [];
		F.line = 29;
		var best_delta_257750 = 0.0;
		F.line = 29;
		var best_period_257751 = 0.0;
		F.line = 30;
		best_delta_257750 = Infinity;
		L1: do {
			F.line = 31;
			var name_257814 = null;
			F.line = 31;
			var period_257815 = 0.0;
			F.line = 184;
			var i_258316 = 0;
			F.line = 185;
			var l_258317 = (planets_257059[0] != null ? planets_257059[0].length : 0);
			L2: do {
				F.line = 186;
					L3: while (true) {
					if (!(i_258316 < l_258317)) break L3;
						F.line = 31;
						name_257814 = planets_257059[0][chckIndx(i_258316, 0, (planets_257059[0] != null ? planets_257059[0].length : 0)+0-1)-0]["Field0"];
						F.line = 187;
						period_257815 = planets_257059[0][chckIndx(i_258316, 0, (planets_257059[0] != null ? planets_257059[0].length : 0)+0-1)-0]["Field1"];
						F.line = 33;
						var ratio_257816 = (period_257815 / 3.6525000000000000e+02);
						F.line = 34;
						var delta_257817 = abs_12649((desired_ratio_257748 - ratio_257816));
						if ((delta_257817 < best_delta_257750)) {
						F.line = 36;
						best_name_257749 = nimCopy(null, name_257814, NTI138);
						F.line = 37;
						best_delta_257750 = delta_257817;
						F.line = 38;
						best_period_257751 = period_257815;
						}
						
						F.line = 188;
						i_258316 = addInt(i_258316, 1);
						if (!(((planets_257059[0] != null ? planets_257059[0].length : 0) == l_258317))) {
						F.line = 189;
						failed_assert_impl_15266(makeNimstrLit("/usr/lib/nim/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 39;
		F.line = 40;
		var tmp_257818 = tree_222046(43, []);
		F.line = 40;
		tmp_257818.class = "result";
		F.line = 41;
		add_220786(tmp_257818, text_222164(makeNimstrLit("Best match is ")));
		F.line = 42;
		var tmp_257819 = tree_222046(44, []);
		F.line = 42;
		set_attr_220568(tmp_257819, "href", toJSStr((makeNimstrLit("https://exoplanetarchive.ipac.caltech.edu/overview/") || []).concat(encode_url_252041(best_name_257749, false) || [])));
		F.line = 43;
		set_attr_220568(tmp_257819, "target", "_blank");
		F.line = 44;
		add_220786(tmp_257819, text_222164(best_name_257749));
		F.line = 44;
		add_220786(tmp_257818, tmp_257819);
		F.line = 45;
		F.line = 45;
		var fmt_res_257828 = [mnewString(0)];
		F.line = 45;
		if (fmt_res_257828[0] != null) { fmt_res_257828[0] = (fmt_res_257828[0]).concat(makeNimstrLit(" with a period of ")); } else { fmt_res_257828[0] = makeNimstrLit(" with a period of "); };
		F.line = 45;
		format_value_257830(fmt_res_257828, 0, best_period_257751, []);
		F.line = 45;
		if (fmt_res_257828[0] != null) { fmt_res_257828[0] = (fmt_res_257828[0]).concat(makeNimstrLit(" (earth) days (")); } else { fmt_res_257828[0] = makeNimstrLit(" (earth) days ("); };
		F.line = 45;
		format_value_257830(fmt_res_257828, 0, (best_delta_257750 * 1.0000000000000000e+02), makeNimstrLit(".2f"));
		F.line = 45;
		if (fmt_res_257828[0] != null) { fmt_res_257828[0] = (fmt_res_257828[0]).concat(makeNimstrLit("% from target)")); } else { fmt_res_257828[0] = makeNimstrLit("% from target)"); };
		add_220786(tmp_257818, text_222164(fmt_res_257828[0]));
		result_257747 = tmp_257818;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257747;

}

function render_258134() {

		function HEX3Aanonymous_258195(e_258197, n_258198) {
			var F={procname:"render.:anonymous",prev:framePtr,filename:"planets.nim",line:0};
			framePtr = F;
				F.line = 57;
				earth_age_257001[0] = parseFloat(value_219822(n_258198));
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_258224(e_258226, n_258227) {
			var F={procname:"render.:anonymous",prev:framePtr,filename:"planets.nim",line:0};
			framePtr = F;
				F.line = 60;
				desired_age_257002[0] = parseFloat(value_219822(n_258227));
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_258253() {
			var F={procname:"render.:anonymous",prev:framePtr,filename:"planets.nim",line:0};
			framePtr = F;
				F.line = 62;
				res_257054[0] = find_planet_257743(earth_age_257001[0], desired_age_257002[0]);
			framePtr = F.prev;

			
		}

	var result_258136 = null;

	var F={procname:"planets.render",prev:framePtr,filename:"planets.nim",line:0};
	framePtr = F;
		F.line = 50;
		F.line = 50;
		var tmp_258138 = tree_222046(43, []);
		F.line = 50;
		tmp_258138.class = "planets-wrapper";
		F.line = 51;
		var tmp_258139 = tree_222046(17, []);
		F.line = 51;
		tmp_258139.class = "planets";
		F.line = 52;
		var tmp_258140 = tree_222046(27, []);
		F.line = 52;
		tmp_258140.class = "header";
		F.line = 53;
		var tmp_258141 = tree_222046(23, []);
		F.line = 54;
		add_220786(tmp_258141, text_222164(makeNimstrLit("Age on other planets")));
		F.line = 54;
		add_220786(tmp_258140, tmp_258141);
		F.line = 54;
		add_220786(tmp_258139, tmp_258140);
		F.line = 55;
		var tmp_258142 = tree_222046(31, []);
		F.line = 56;
		add_220786(tmp_258142, text_222164(makeNimstrLit("Age in earth years: ")));
		F.line = 57;
		var tmp_258143 = tree_222046(105, []);
		F.line = 57;
		tmp_258143.class = "age";
		F.line = 57;
		add_event_handler_240348(tmp_258143, 3, HEX3Aanonymous_258195, kxi_231324[0]);
		F.line = 57;
		add_220786(tmp_258142, tmp_258143);
		F.line = 57;
		add_220786(tmp_258139, tmp_258142);
		F.line = 58;
		var tmp_258144 = tree_222046(31, []);
		F.line = 59;
		add_220786(tmp_258144, text_222164(makeNimstrLit("Desired age: ")));
		F.line = 60;
		var tmp_258145 = tree_222046(105, []);
		F.line = 60;
		tmp_258145.class = "age";
		F.line = 60;
		add_event_handler_240348(tmp_258145, 3, HEX3Aanonymous_258224, kxi_231324[0]);
		F.line = 60;
		add_220786(tmp_258144, tmp_258145);
		F.line = 60;
		add_220786(tmp_258139, tmp_258144);
		F.line = 61;
		var tmp_258146 = tree_222046(31, []);
		F.line = 62;
		var tmp_258147 = tree_222046(106, []);
		F.line = 62;
		add_event_handler_240384(tmp_258147, 0, HEX3Aanonymous_258253, kxi_231324[0]);
		F.line = 63;
		add_220786(tmp_258147, text_222164(makeNimstrLit("Calculate")));
		F.line = 63;
		add_220786(tmp_258146, tmp_258147);
		F.line = 63;
		add_220786(tmp_258139, tmp_258146);
		F.line = 64;
		var tmp_258148 = tree_222046(31, []);
		F.line = 65;
		add_220786(tmp_258148, res_257054[0]);
		F.line = 65;
		add_220786(tmp_258139, tmp_258148);
		F.line = 65;
		add_220786(tmp_258138, tmp_258139);
		result_258136 = tmp_258138;
	framePtr = F.prev;

	return result_258136;

}
set_renderer_240201(render_258134, "ROOT", null);
